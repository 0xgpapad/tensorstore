Search.setIndex({docurls:["context.html","driver/array/index.html","driver/cast/index.html","driver/downsample/index.html","driver/index.html","driver/json/index.html","driver/n5/index.html","driver/neuroglancer_precomputed/index.html","driver/zarr/index.html","environment.html","index.html","index_space.html","installation.html","kvstore/file/index.html","kvstore/gcs/index.html","kvstore/index.html","kvstore/memory/index.html","python/api/index.html","python/api/tensorstore.ChunkLayout.html","python/api/tensorstore.ChunkLayout.Grid.html","python/api/tensorstore.ChunkLayout.Grid.__eq__.html","python/api/tensorstore.ChunkLayout.Grid.__init__.html","python/api/tensorstore.ChunkLayout.Grid.shape.html","python/api/tensorstore.ChunkLayout.__eq__.html","python/api/tensorstore.ChunkLayout.__init__-1.html","python/api/tensorstore.ChunkLayout.__init__-2.html","python/api/tensorstore.ChunkLayout.codec_chunk.html","python/api/tensorstore.ChunkLayout.grid_origin.html","python/api/tensorstore.ChunkLayout.inner_order.html","python/api/tensorstore.ChunkLayout.ndim.html","python/api/tensorstore.ChunkLayout.rank.html","python/api/tensorstore.ChunkLayout.read_chunk.html","python/api/tensorstore.ChunkLayout.read_chunk_template.html","python/api/tensorstore.ChunkLayout.to_json.html","python/api/tensorstore.ChunkLayout.write_chunk.html","python/api/tensorstore.ChunkLayout.write_chunk_template.html","python/api/tensorstore.Context.html","python/api/tensorstore.Context.Resource.html","python/api/tensorstore.Context.Resource.to_json.html","python/api/tensorstore.Context.Spec.html","python/api/tensorstore.Context.Spec.__init__.html","python/api/tensorstore.Context.Spec.to_json.html","python/api/tensorstore.Context.__getitem__.html","python/api/tensorstore.Context.__init__-default.html","python/api/tensorstore.Context.__init__-json.html","python/api/tensorstore.Context.__init__-spec.html","python/api/tensorstore.Context.parent.html","python/api/tensorstore.Context.spec.html","python/api/tensorstore.Dim.html","python/api/tensorstore.Dim.__eq__.html","python/api/tensorstore.Dim.__init__-1.html","python/api/tensorstore.Dim.__init__-2.html","python/api/tensorstore.Dim.__init__-3.html","python/api/tensorstore.Dim.__init__-4.html","python/api/tensorstore.Dim.__init__-5.html","python/api/tensorstore.Dim.implicit_lower.html","python/api/tensorstore.Dim.implicit_upper.html","python/api/tensorstore.Dim.label.html","python/api/tensorstore.DimExpression.html","python/api/tensorstore.DimExpression.__getitem__.html","python/api/tensorstore.DimExpression.oindex.html","python/api/tensorstore.DimExpression.vindex.html","python/api/tensorstore.Future.html","python/api/tensorstore.Future.add_done_callback.html","python/api/tensorstore.Future.cancel.html","python/api/tensorstore.Future.cancelled.html","python/api/tensorstore.Future.done.html","python/api/tensorstore.Future.exception.html","python/api/tensorstore.Future.force.html","python/api/tensorstore.Future.remove_done_callback.html","python/api/tensorstore.Future.result.html","python/api/tensorstore.Index.html","python/api/tensorstore.IndexDomain.html","python/api/tensorstore.IndexDomain.__eq__.html","python/api/tensorstore.IndexDomain.__getitem__-1.html","python/api/tensorstore.IndexDomain.__getitem__-2.html","python/api/tensorstore.IndexDomain.__getitem__-3.html","python/api/tensorstore.IndexDomain.__getitem__-4.html","python/api/tensorstore.IndexDomain.__init__-1.html","python/api/tensorstore.IndexDomain.__init__-2.html","python/api/tensorstore.IndexDomain.exclusive_max.html","python/api/tensorstore.IndexDomain.implicit_lower_bounds.html","python/api/tensorstore.IndexDomain.implicit_upper_bounds.html","python/api/tensorstore.IndexDomain.inclusive_max.html","python/api/tensorstore.IndexDomain.inclusive_min.html","python/api/tensorstore.IndexDomain.labels.html","python/api/tensorstore.IndexDomain.ndim.html","python/api/tensorstore.IndexDomain.origin.html","python/api/tensorstore.IndexDomain.rank.html","python/api/tensorstore.IndexDomain.shape.html","python/api/tensorstore.IndexDomain.size.html","python/api/tensorstore.IndexInterval.html","python/api/tensorstore.IndexInterval.__eq__.html","python/api/tensorstore.IndexInterval.__init__-1.html","python/api/tensorstore.IndexInterval.__init__-2.html","python/api/tensorstore.IndexInterval.__init__-3.html","python/api/tensorstore.IndexInterval.__init__-4.html","python/api/tensorstore.IndexInterval.__init__-5.html","python/api/tensorstore.IndexInterval.empty.html","python/api/tensorstore.IndexInterval.exclusive_max.html","python/api/tensorstore.IndexInterval.exclusive_min.html","python/api/tensorstore.IndexInterval.finite.html","python/api/tensorstore.IndexInterval.inclusive_max.html","python/api/tensorstore.IndexInterval.inclusive_min.html","python/api/tensorstore.IndexInterval.size.html","python/api/tensorstore.IndexTransform.html","python/api/tensorstore.IndexTransform.T.html","python/api/tensorstore.IndexTransform.__call__.html","python/api/tensorstore.IndexTransform.__eq__.html","python/api/tensorstore.IndexTransform.__getitem__-1.html","python/api/tensorstore.IndexTransform.__getitem__-2.html","python/api/tensorstore.IndexTransform.__getitem__-3.html","python/api/tensorstore.IndexTransform.__getitem__-4.html","python/api/tensorstore.IndexTransform.__init__-1.html","python/api/tensorstore.IndexTransform.__init__-2.html","python/api/tensorstore.IndexTransform.__init__-3.html","python/api/tensorstore.IndexTransform.domain.html","python/api/tensorstore.IndexTransform.implicit_lower_bounds.html","python/api/tensorstore.IndexTransform.implicit_upper_bounds.html","python/api/tensorstore.IndexTransform.input_exclusive_max.html","python/api/tensorstore.IndexTransform.input_inclusive_max.html","python/api/tensorstore.IndexTransform.input_inclusive_min.html","python/api/tensorstore.IndexTransform.input_labels.html","python/api/tensorstore.IndexTransform.input_origin.html","python/api/tensorstore.IndexTransform.input_rank.html","python/api/tensorstore.IndexTransform.input_shape.html","python/api/tensorstore.IndexTransform.ndim.html","python/api/tensorstore.IndexTransform.oindex.html","python/api/tensorstore.IndexTransform.origin.html","python/api/tensorstore.IndexTransform.output.html","python/api/tensorstore.IndexTransform.output_rank.html","python/api/tensorstore.IndexTransform.shape.html","python/api/tensorstore.IndexTransform.size.html","python/api/tensorstore.IndexTransform.to_json.html","python/api/tensorstore.IndexTransform.vindex.html","python/api/tensorstore.Indexable.html","python/api/tensorstore.OutputIndexMap.html","python/api/tensorstore.OutputIndexMap.__eq__.html","python/api/tensorstore.OutputIndexMap.__init__-1.html","python/api/tensorstore.OutputIndexMap.__init__-2.html","python/api/tensorstore.OutputIndexMap.__init__-3.html","python/api/tensorstore.OutputIndexMap.index_array.html","python/api/tensorstore.OutputIndexMap.index_range.html","python/api/tensorstore.OutputIndexMap.input_dimension.html","python/api/tensorstore.OutputIndexMap.method.html","python/api/tensorstore.OutputIndexMap.offset.html","python/api/tensorstore.OutputIndexMap.stride.html","python/api/tensorstore.OutputIndexMaps.html","python/api/tensorstore.OutputIndexMaps.__eq__.html","python/api/tensorstore.OutputIndexMaps.__getitem__.html","python/api/tensorstore.OutputIndexMaps.rank.html","python/api/tensorstore.OutputIndexMethod.html","python/api/tensorstore.OutputIndexMethod.__eq__.html","python/api/tensorstore.OutputIndexMethod.__init__.html","python/api/tensorstore.OutputIndexMethod.array.html","python/api/tensorstore.OutputIndexMethod.constant.html","python/api/tensorstore.OutputIndexMethod.name.html","python/api/tensorstore.OutputIndexMethod.single_input_dimension.html","python/api/tensorstore.Promise.html","python/api/tensorstore.Promise.new.html","python/api/tensorstore.Promise.set_exception.html","python/api/tensorstore.Promise.set_result.html","python/api/tensorstore.Spec.html","python/api/tensorstore.Spec.T.html","python/api/tensorstore.Spec.__eq__.html","python/api/tensorstore.Spec.__getitem__-1.html","python/api/tensorstore.Spec.__getitem__-2.html","python/api/tensorstore.Spec.__getitem__-3.html","python/api/tensorstore.Spec.__getitem__-4.html","python/api/tensorstore.Spec.__init__.html","python/api/tensorstore.Spec.domain.html","python/api/tensorstore.Spec.dtype.html","python/api/tensorstore.Spec.ndim.html","python/api/tensorstore.Spec.oindex.html","python/api/tensorstore.Spec.origin.html","python/api/tensorstore.Spec.rank.html","python/api/tensorstore.Spec.shape.html","python/api/tensorstore.Spec.size.html","python/api/tensorstore.Spec.to_json.html","python/api/tensorstore.Spec.transform.html","python/api/tensorstore.Spec.vindex.html","python/api/tensorstore.TensorStore.html","python/api/tensorstore.TensorStore.T.html","python/api/tensorstore.TensorStore.__array__.html","python/api/tensorstore.TensorStore.__getitem__-1.html","python/api/tensorstore.TensorStore.__getitem__-2.html","python/api/tensorstore.TensorStore.__getitem__-3.html","python/api/tensorstore.TensorStore.__getitem__-4.html","python/api/tensorstore.TensorStore.__setitem__-1.html","python/api/tensorstore.TensorStore.__setitem__-2.html","python/api/tensorstore.TensorStore.__setitem__-3.html","python/api/tensorstore.TensorStore.__setitem__-4.html","python/api/tensorstore.TensorStore.__setitem__-5.html","python/api/tensorstore.TensorStore.__setitem__-6.html","python/api/tensorstore.TensorStore.astype.html","python/api/tensorstore.TensorStore.chunk_layout.html","python/api/tensorstore.TensorStore.domain.html","python/api/tensorstore.TensorStore.dtype.html","python/api/tensorstore.TensorStore.mode.html","python/api/tensorstore.TensorStore.ndim.html","python/api/tensorstore.TensorStore.oindex.html","python/api/tensorstore.TensorStore.oindex.__setitem__-1.html","python/api/tensorstore.TensorStore.oindex.__setitem__-2.html","python/api/tensorstore.TensorStore.origin.html","python/api/tensorstore.TensorStore.rank.html","python/api/tensorstore.TensorStore.read.html","python/api/tensorstore.TensorStore.readable.html","python/api/tensorstore.TensorStore.resolve.html","python/api/tensorstore.TensorStore.shape.html","python/api/tensorstore.TensorStore.size.html","python/api/tensorstore.TensorStore.spec.html","python/api/tensorstore.TensorStore.transaction.html","python/api/tensorstore.TensorStore.vindex.html","python/api/tensorstore.TensorStore.vindex.__setitem__-1.html","python/api/tensorstore.TensorStore.vindex.__setitem__-2.html","python/api/tensorstore.TensorStore.with_transaction.html","python/api/tensorstore.TensorStore.writable.html","python/api/tensorstore.TensorStore.write-1.html","python/api/tensorstore.TensorStore.write-2.html","python/api/tensorstore.Transaction.html","python/api/tensorstore.Transaction.__init__.html","python/api/tensorstore.Transaction.abort.html","python/api/tensorstore.Transaction.aborted.html","python/api/tensorstore.Transaction.atomic.html","python/api/tensorstore.Transaction.commit_async.html","python/api/tensorstore.Transaction.commit_started.html","python/api/tensorstore.Transaction.commit_sync.html","python/api/tensorstore.Transaction.future.html","python/api/tensorstore.Transaction.open.html","python/api/tensorstore.WriteFutures.html","python/api/tensorstore.WriteFutures.add_done_callback.html","python/api/tensorstore.WriteFutures.cancel.html","python/api/tensorstore.WriteFutures.cancelled.html","python/api/tensorstore.WriteFutures.commit.html","python/api/tensorstore.WriteFutures.copy.html","python/api/tensorstore.WriteFutures.done.html","python/api/tensorstore.WriteFutures.exception.html","python/api/tensorstore.WriteFutures.remove_done_callback.html","python/api/tensorstore.WriteFutures.result.html","python/api/tensorstore.array-1.html","python/api/tensorstore.array-2.html","python/api/tensorstore.bfloat16.html","python/api/tensorstore.bool.html","python/api/tensorstore.cast.html","python/api/tensorstore.complex128.html","python/api/tensorstore.complex64.html","python/api/tensorstore.d.html","python/api/tensorstore.d.__class_getitem__.html","python/api/tensorstore.d.__eq__.html","python/api/tensorstore.d.__getitem__.html","python/api/tensorstore.d.oindex.html","python/api/tensorstore.d.vindex.html","python/api/tensorstore.downsample-spec.html","python/api/tensorstore.downsample-store.html","python/api/tensorstore.dtype.html","python/api/tensorstore.dtype.__call__.html","python/api/tensorstore.dtype.__eq__.html","python/api/tensorstore.dtype.__init__-dtype.html","python/api/tensorstore.dtype.__init__-name.html","python/api/tensorstore.dtype.name.html","python/api/tensorstore.dtype.numpy_dtype.html","python/api/tensorstore.dtype.to_json.html","python/api/tensorstore.dtype.type.html","python/api/tensorstore.float16.html","python/api/tensorstore.float32.html","python/api/tensorstore.float64.html","python/api/tensorstore.inf.html","python/api/tensorstore.int16.html","python/api/tensorstore.int32.html","python/api/tensorstore.int64.html","python/api/tensorstore.int8.html","python/api/tensorstore.json.html","python/api/tensorstore.newaxis.html","python/api/tensorstore.open.html","python/api/tensorstore.string.html","python/api/tensorstore.uint16.html","python/api/tensorstore.uint32.html","python/api/tensorstore.uint64.html","python/api/tensorstore.uint8.html","python/api/tensorstore.ustring.html","python/indexing.html","python/tutorial.html","spec.html"],envversion:{"sphinx.domains.c":2,"sphinx.domains.changeset":1,"sphinx.domains.citation":1,"sphinx.domains.cpp":3,"sphinx.domains.index":1,"sphinx.domains.javascript":2,"sphinx.domains.math":2,"sphinx.domains.python":2,"sphinx.domains.rst":2,"sphinx.domains.std":2,"sphinx.ext.intersphinx":1,sphinx:56},objects:{"":{"driver/array":[1,0,1,"json-driver/array",""],"driver/cast":[2,0,1,"json-driver/cast",""],"driver/downsample":[3,0,1,"json-driver/downsample",""],"driver/json":[5,0,1,"json-driver/json",""],"driver/n5":[6,0,1,"json-driver/n5",""],"driver/n5/Codec":[6,0,1,"json-driver/n5/Codec",""],"driver/n5/Compression":[6,0,1,"json-driver/n5/Compression",""],"driver/n5/Compression/blosc":[6,0,1,"json-driver/n5/Compression/blosc",""],"driver/n5/Compression/bzip2":[6,0,1,"json-driver/n5/Compression/bzip2",""],"driver/n5/Compression/gzip":[6,0,1,"json-driver/n5/Compression/gzip",""],"driver/n5/Compression/raw":[6,0,1,"json-driver/n5/Compression/raw",""],"driver/n5/Compression/xz":[6,0,1,"json-driver/n5/Compression/xz",""],"driver/neuroglancer_precomputed":[7,0,1,"json-driver/neuroglancer_precomputed",""],"driver/neuroglancer_precomputed/ShardingSpec":[7,0,1,"json-driver/neuroglancer_precomputed/ShardingSpec","Sharding"],"driver/zarr":[8,0,1,"json-driver/zarr",""],"driver/zarr/Codec":[8,0,1,"json-driver/zarr/Codec",""],"driver/zarr/Compressor":[8,0,1,"json-driver/zarr/Compressor","Compressor"],"driver/zarr/Compressor/blosc":[8,0,1,"json-driver/zarr/Compressor/blosc",""],"driver/zarr/Compressor/bz2":[8,0,1,"json-driver/zarr/Compressor/bz2",""],"driver/zarr/Compressor/zlib":[8,0,1,"json-driver/zarr/Compressor/zlib",""],"kvstore/file":[13,0,1,"json-kvstore/file",""],"kvstore/gcs":[14,0,1,"json-kvstore/gcs",""],"kvstore/memory":[16,0,1,"json-kvstore/memory",""],BAZELISK_HOME:[12,9,1,"-",""],CacheRevalidationBound:[4,0,1,"json-CacheRevalidationBound",""],Context:[0,0,1,"json-Context",""],ContextResource:[0,0,1,"json-ContextResource",""],DownsampleMethod:[3,0,1,"json-DownsampleMethod","Downsample method"],GOOGLE_APPLICATION_CREDENTIALS:[9,9,1,"-",""],IndexDomain:[11,0,1,"json-IndexDomain",""],IndexInterval:[11,0,1,"json-IndexInterval","Specifies a closed interval of integer index values."],IndexTransform:[11,0,1,"json-IndexTransform",""],KeyValueStore:[15,0,1,"json-KeyValueStore",""],KeyValueStoreBackedChunkDriver:[4,0,1,"json-KeyValueStoreBackedChunkDriver",""],OutputIndexMap:[11,0,1,"json-OutputIndexMap","Specifies a transform from an input space to a single output index."],SSLKEYLOGFILE:[9,9,1,"-",""],TENSORSTORE_BAZELISK:[12,9,1,"-",""],TENSORSTORE_BAZEL_BUILD_OPTIONS:[12,9,1,"-",""],TENSORSTORE_BAZEL_COMPILATION_MODE:[12,9,1,"-",""],TENSORSTORE_BAZEL_STARTUP_OPTIONS:[12,9,1,"-",""],TENSORSTORE_CA_BUNDLE:[9,9,1,"-",""],TENSORSTORE_CA_PATH:[9,9,1,"-",""],TENSORSTORE_CURL_VERBOSE:[9,9,1,"-",""],TENSORSTORE_PREBUILT_DIR:[12,9,1,"-",""],TENSORSTORE_SYSTEM_LIBS:[12,9,1,"-",""],TensorStore:[282,0,1,"json-TensorStore","Specifies a TensorStore to open/create."],all_proxy:[9,9,1,"-",""],dtype:[282,0,1,"json-dtype","Specifies a TensorStore data type."],http_proxy:[9,9,1,"-",""],https_proxy:[9,9,1,"-",""],no_proxy:[9,9,1,"-",""]},"Context.cache_pool":{queued_for_writeback_bytes_limit:[0,1,2,"json-Context.cache_pool.queued_for_writeback_bytes_limit",""],total_bytes_limit:[0,1,2,"json-Context.cache_pool.total_bytes_limit",""]},"Context.data_copy_concurrency":{limit:[0,1,2,"json-Context.data_copy_concurrency.limit",""]},"Context.file_io_concurrency":{limit:[0,1,2,"json-Context.file_io_concurrency.limit",""]},"Context.gcs_request_concurrency":{limit:[14,1,2,"json-Context.gcs_request_concurrency.limit",""]},"Context.gcs_request_retries":{max_retries:[14,1,2,"json-Context.gcs_request_retries.max_retries",""]},"Context.gcs_user_project":{project_id:[14,1,2,"json-Context.gcs_user_project.project_id","Google Cloud project id, e.g. \"my-project\".  The Google Cloud\naccount that is used must have appropriate permissions to bill to the\nspecified project."]},"driver/array":{array:[1,1,2,"json-driver/array.array","Nested array of rank equal to rank specifying the initial value."],context:[1,1,2,"json-driver/array.context","Specifies context resources that augment/override the parent context."],driver:[1,1,2,"json-driver/array.driver",""],dtype:[1,1,2,"json-driver/array.dtype","Specifies the data type."],rank:[1,1,2,"json-driver/array.rank","Specifies the rank of the TensorStore."],transform:[1,1,2,"json-driver/array.transform","Specifies a transform."]},"driver/cast":{base:[2,1,2,"json-driver/cast.base","Base TensorStore to convert."],context:[2,1,2,"json-driver/cast.context","Specifies context resources that augment/override the parent context."],driver:[2,1,2,"json-driver/cast.driver",""],dtype:[2,1,2,"json-driver/cast.dtype","Specifies the data type under which to view the base TensorStore."],rank:[2,1,2,"json-driver/cast.rank","Specifies the rank of the TensorStore."],transform:[2,1,2,"json-driver/cast.transform","Specifies a transform."]},"driver/downsample":{base:[3,1,2,"json-driver/downsample.base","Base TensorStore to downsample."],context:[3,1,2,"json-driver/downsample.context","Specifies context resources that augment/override the parent context."],downsample_factors:[3,1,2,"json-driver/downsample.downsample_factors",""],downsample_method:[3,1,2,"json-driver/downsample.downsample_method",""],driver:[3,1,2,"json-driver/downsample.driver",""],dtype:[3,1,2,"json-driver/downsample.dtype","Specifies the data type."],rank:[3,1,2,"json-driver/downsample.rank","Specifies the rank of the TensorStore."],transform:[3,1,2,"json-driver/downsample.transform","Specifies a transform."]},"driver/json":{cache_pool:[5,1,2,"json-driver/json.cache_pool",""],context:[5,1,2,"json-driver/json.context","Specifies context resources that augment/override the parent context."],data_copy_concurrency:[5,1,2,"json-driver/json.data_copy_concurrency",""],driver:[5,1,2,"json-driver/json.driver",""],dtype:[5,1,2,"json-driver/json.dtype",""],json_pointer:[5,1,2,"json-driver/json.json_pointer",""],kvstore:[5,1,2,"json-driver/json.kvstore",""],path:[5,1,2,"json-driver/json.path",""],rank:[5,1,2,"json-driver/json.rank",""],recheck_cached_data:[5,1,2,"json-driver/json.recheck_cached_data",""],transform:[5,1,2,"json-driver/json.transform","Specifies a transform."]},"driver/n5":{cache_pool:[6,1,2,"json-driver/n5.cache_pool",""],context:[6,1,2,"json-driver/n5.context","Specifies context resources that augment/override the parent context."],create:[6,1,2,"json-driver/n5.create",""],data_copy_concurrency:[6,1,2,"json-driver/n5.data_copy_concurrency",""],delete_existing:[6,1,2,"json-driver/n5.delete_existing",""],driver:[6,1,2,"json-driver/n5.driver",""],dtype:[6,1,2,"json-driver/n5.dtype","Specifies the data type."],kvstore:[6,1,2,"json-driver/n5.kvstore",""],metadata:[6,1,2,"json-driver/n5.metadata","N5 array metadata."],open:[6,1,2,"json-driver/n5.open",""],path:[6,1,2,"json-driver/n5.path",""],rank:[6,1,2,"json-driver/n5.rank","Specifies the rank of the TensorStore."],recheck_cached_data:[6,1,2,"json-driver/n5.recheck_cached_data",""],recheck_cached_metadata:[6,1,2,"json-driver/n5.recheck_cached_metadata",""],transform:[6,1,2,"json-driver/n5.transform","Specifies a transform."]},"driver/n5.metadata":{axes:[6,1,2,"json-driver/n5.metadata.axes","Specifies a label for each dimension of the dataset."],blockSize:[6,1,2,"json-driver/n5.metadata.blockSize","Chunk dimensions."],compression:[6,1,2,"json-driver/n5.metadata.compression","Specifies the chunk compression method."],dataType:[6,1,2,"json-driver/n5.metadata.dataType","Specifies the data type."],dimensions:[6,1,2,"json-driver/n5.metadata.dimensions","Dimensions of the dataset."]},"driver/n5/Codec":{compression:[6,1,2,"json-driver/n5/Codec.compression","Specifies the chunk compression method."],driver:[6,1,2,"json-driver/n5/Codec.driver",""]},"driver/n5/Compression":{type:[6,1,2,"json-driver/n5/Compression.type",""]},"driver/n5/Compression/blosc":{clevel:[6,1,2,"json-driver/n5/Compression/blosc.clevel","Specifies the Blosc compression level to use."],cname:[6,1,2,"json-driver/n5/Compression/blosc.cname",""],shuffle:[6,1,2,"json-driver/n5/Compression/blosc.shuffle",""],type:[6,1,2,"json-driver/n5/Compression/blosc.type",""]},"driver/n5/Compression/bzip2":{blockSize:[6,1,2,"json-driver/n5/Compression/bzip2.blockSize","Specifies the bzip2 block size to use (in units of 100KB), which also determine the compression level."],type:[6,1,2,"json-driver/n5/Compression/bzip2.type",""]},"driver/n5/Compression/gzip":{level:[6,1,2,"json-driver/n5/Compression/gzip.level","Specifies the zlib compression level to use."],type:[6,1,2,"json-driver/n5/Compression/gzip.type",""],useZlib:[6,1,2,"json-driver/n5/Compression/gzip.useZlib",""]},"driver/n5/Compression/raw":{type:[6,1,2,"json-driver/n5/Compression/raw.type",""]},"driver/n5/Compression/xz":{preset:[6,1,2,"json-driver/n5/Compression/xz.preset",""],type:[6,1,2,"json-driver/n5/Compression/xz.type",""]},"driver/neuroglancer_precomputed":{cache_pool:[7,1,2,"json-driver/neuroglancer_precomputed.cache_pool",""],context:[7,1,2,"json-driver/neuroglancer_precomputed.context","Specifies context resources that augment/override the parent context."],create:[7,1,2,"json-driver/neuroglancer_precomputed.create",""],data_copy_concurrency:[7,1,2,"json-driver/neuroglancer_precomputed.data_copy_concurrency",""],delete_existing:[7,1,2,"json-driver/neuroglancer_precomputed.delete_existing",""],driver:[7,1,2,"json-driver/neuroglancer_precomputed.driver",""],dtype:[7,1,2,"json-driver/neuroglancer_precomputed.dtype","Specifies the data type."],kvstore:[7,1,2,"json-driver/neuroglancer_precomputed.kvstore",""],multiscale_metadata:[7,1,2,"json-driver/neuroglancer_precomputed.multiscale_metadata","Scale-independent metadata."],open:[7,1,2,"json-driver/neuroglancer_precomputed.open",""],path:[7,1,2,"json-driver/neuroglancer_precomputed.path",""],rank:[7,1,2,"json-driver/neuroglancer_precomputed.rank","Specifies the rank of the TensorStore."],recheck_cached_data:[7,1,2,"json-driver/neuroglancer_precomputed.recheck_cached_data",""],recheck_cached_metadata:[7,1,2,"json-driver/neuroglancer_precomputed.recheck_cached_metadata",""],scale_index:[7,1,2,"json-driver/neuroglancer_precomputed.scale_index","Zero-based index of the scale to open or create."],scale_metadata:[7,1,2,"json-driver/neuroglancer_precomputed.scale_metadata","Per-scale metadata."],transform:[7,1,2,"json-driver/neuroglancer_precomputed.transform","Specifies a transform."]},"driver/neuroglancer_precomputed.multiscale_metadata":{data_type:[7,1,2,"json-driver/neuroglancer_precomputed.multiscale_metadata.data_type","Specifies the data type."],num_channels:[7,1,2,"json-driver/neuroglancer_precomputed.multiscale_metadata.num_channels","Number of channels."],type:[7,1,2,"json-driver/neuroglancer_precomputed.multiscale_metadata.type","Specifying the type of volume."]},"driver/neuroglancer_precomputed.scale_metadata":{chunk_size:[7,1,2,"json-driver/neuroglancer_precomputed.scale_metadata.chunk_size","Chunk dimensions (XYZ order)."],compressed_segmentation_block_size:[7,1,2,"json-driver/neuroglancer_precomputed.scale_metadata.compressed_segmentation_block_size","Block size for compressed segmentation encoding."],encoding:[7,1,2,"json-driver/neuroglancer_precomputed.scale_metadata.encoding","Specifies the chunk encoding."],jpeg_quality:[7,1,2,"json-driver/neuroglancer_precomputed.scale_metadata.jpeg_quality","JPEG encoding quality."],key:[7,1,2,"json-driver/neuroglancer_precomputed.scale_metadata.key","Specifies the scale key (relative to path)."],resolution:[7,1,2,"json-driver/neuroglancer_precomputed.scale_metadata.resolution","Voxel size in nanometers (XYZ order)."],sharding:[7,1,2,"json-driver/neuroglancer_precomputed.scale_metadata.sharding",""],size:[7,1,2,"json-driver/neuroglancer_precomputed.scale_metadata.size","Voxel dimensions of the volume (XYZ order)."],voxel_offset:[7,1,2,"json-driver/neuroglancer_precomputed.scale_metadata.voxel_offset","Voxel origin of the volume (XYZ order)."]},"driver/neuroglancer_precomputed/ShardingSpec":{"@type":[7,1,2,"json-driver/neuroglancer_precomputed/ShardingSpec.@type",""],data_index_encoding:[7,1,2,"json-driver/neuroglancer_precomputed/ShardingSpec.data_index_encoding","Specifies the encoding of the data chunks."],hash:[7,1,2,"json-driver/neuroglancer_precomputed/ShardingSpec.hash","Specifies the hash function used to map chunk IDs to shards."],minishard_bits:[7,1,2,"json-driver/neuroglancer_precomputed/ShardingSpec.minishard_bits","Number of bits of the hashed chunk ID that determine the minishard number."],minishard_index_encoding:[7,1,2,"json-driver/neuroglancer_precomputed/ShardingSpec.minishard_index_encoding","Specifies the encoding of the minishard index."],preshift_bits:[7,1,2,"json-driver/neuroglancer_precomputed/ShardingSpec.preshift_bits","Number of low-order bits of the chunk ID that do not contribute to the hashed chunk ID."],shard_bits:[7,1,2,"json-driver/neuroglancer_precomputed/ShardingSpec.shard_bits","Number of bits of the hashed chunk ID that determine the shard number."]},"driver/zarr":{cache_pool:[8,1,2,"json-driver/zarr.cache_pool",""],context:[8,1,2,"json-driver/zarr.context","Specifies context resources that augment/override the parent context."],create:[8,1,2,"json-driver/zarr.create",""],data_copy_concurrency:[8,1,2,"json-driver/zarr.data_copy_concurrency",""],delete_existing:[8,1,2,"json-driver/zarr.delete_existing",""],driver:[8,1,2,"json-driver/zarr.driver",""],dtype:[8,1,2,"json-driver/zarr.dtype","Specifies the data type."],field:[8,1,2,"json-driver/zarr.field","Name of field to open."],key_encoding:[8,1,2,"json-driver/zarr.key_encoding","Specifies the encoding of chunk indices into key-value store keys."],kvstore:[8,1,2,"json-driver/zarr.kvstore",""],metadata:[8,1,2,"json-driver/zarr.metadata","Zarr array metadata."],open:[8,1,2,"json-driver/zarr.open",""],path:[8,1,2,"json-driver/zarr.path",""],rank:[8,1,2,"json-driver/zarr.rank","Specifies the rank of the TensorStore."],recheck_cached_data:[8,1,2,"json-driver/zarr.recheck_cached_data",""],recheck_cached_metadata:[8,1,2,"json-driver/zarr.recheck_cached_metadata",""],transform:[8,1,2,"json-driver/zarr.transform","Specifies a transform."]},"driver/zarr.metadata":{chunks:[8,1,2,"json-driver/zarr.metadata.chunks","Chunk dimensions."],compressor:[8,1,2,"json-driver/zarr.metadata.compressor","Specifies the chunk compression method."],dtype:[8,1,2,"json-driver/zarr.metadata.dtype","Specifies the single-field or multiple-field data type."],fill_value:[8,1,2,"json-driver/zarr.metadata.fill_value","Specifies the fill value."],filters:[8,1,2,"json-driver/zarr.metadata.filters","Specifies the filters to apply to chunks."],order:[8,1,2,"json-driver/zarr.metadata.order","Specifies the data layout for encoded chunks."],shape:[8,1,2,"json-driver/zarr.metadata.shape","Dimensions of the array."],zarr_format:[8,1,2,"json-driver/zarr.metadata.zarr_format",""]},"driver/zarr/Codec":{compressor:[8,1,2,"json-driver/zarr/Codec.compressor","Specifies the chunk compression method."],driver:[8,1,2,"json-driver/zarr/Codec.driver",""],filters:[8,1,2,"json-driver/zarr/Codec.filters","Specifies the filters to apply to chunks."]},"driver/zarr/Compressor":{id:[8,1,2,"json-driver/zarr/Compressor.id",""]},"driver/zarr/Compressor/blosc":{blocksize:[8,1,2,"json-driver/zarr/Compressor/blosc.blocksize","Specifies the Blosc blocksize."],clevel:[8,1,2,"json-driver/zarr/Compressor/blosc.clevel","Specifies the Blosc compression level to use."],cname:[8,1,2,"json-driver/zarr/Compressor/blosc.cname",""],id:[8,1,2,"json-driver/zarr/Compressor/blosc.id",""],shuffle:[8,1,2,"json-driver/zarr/Compressor/blosc.shuffle",""]},"driver/zarr/Compressor/bz2":{id:[8,1,2,"json-driver/zarr/Compressor/bz2.id",""],level:[8,1,2,"json-driver/zarr/Compressor/bz2.level","Specifies the bzip2 buffer size/compression level to use."]},"driver/zarr/Compressor/zlib":{id:[8,1,2,"json-driver/zarr/Compressor/zlib.id",""],level:[8,1,2,"json-driver/zarr/Compressor/zlib.level","Specifies the zlib compression level to use."]},"kvstore/file":{context:[13,1,2,"json-kvstore/file.context",""],driver:[13,1,2,"json-kvstore/file.driver",""],file_io_concurrency:[13,1,2,"json-kvstore/file.file_io_concurrency",""],path:[13,1,2,"json-kvstore/file.path","Path to root directory on local filesystem."]},"kvstore/gcs":{bucket:[14,1,2,"json-kvstore/gcs.bucket","Google Cloud Storage bucket to use."],context:[14,1,2,"json-kvstore/gcs.context",""],driver:[14,1,2,"json-kvstore/gcs.driver",""],gcs_request_concurrency:[14,1,2,"json-kvstore/gcs.gcs_request_concurrency",""],gcs_request_retries:[14,1,2,"json-kvstore/gcs.gcs_request_retries",""],gcs_user_project:[14,1,2,"json-kvstore/gcs.gcs_user_project",""]},"kvstore/memory":{atomic:[16,1,2,"json-kvstore/memory.atomic",""],context:[16,1,2,"json-kvstore/memory.context",""],driver:[16,1,2,"json-kvstore/memory.driver",""],memory_key_value_store:[16,1,2,"json-kvstore/memory.memory_key_value_store",""]},"tensorstore.ChunkLayout":{"__init__(1)":[24,3,1,"","Constructs a ChunkLayout from a JSON representation."],"__init__(2)":[25,3,1,"","Constructs a ChunkLayout."],Grid:[19,2,1,"",""],__eq__:[23,3,1,"",""],codec_chunk:[26,4,1,"","Chunk grid used by the codec."],grid_origin:[27,4,1,"","Grid origin"],inner_order:[28,4,1,"",""],ndim:[29,4,1,"","Alias for rank."],rank:[30,4,1,"","Number of dimensions in the index space."],read_chunk:[31,4,1,"","Chunk grid for efficient reads."],read_chunk_template:[32,4,1,"","Chunk template for efficient reads."],to_json:[33,3,1,"","Converts to the JSON representation."],write_chunk:[34,4,1,"","Chunk grid for efficient writes."],write_chunk_template:[35,4,1,"","Chunk template for efficient writes."]},"tensorstore.ChunkLayout.Grid":{__eq__:[20,3,1,"",""],__init__:[21,3,1,"","Constructs a chunk grid."],shape:[22,4,1,"","Chunk shape"]},"tensorstore.Context":{"__init__(default)":[43,3,1,"","Constructs a default context."],"__init__(json)":[44,3,1,"","Constructs a context from its JSON representation."],"__init__(spec)":[45,3,1,"","Constructs a context from a parsed spec."],Resource:[37,2,1,"","Handle to a context resource."],Spec:[39,2,1,"","Parsed representation of a JSON Context specification."],__getitem__:[42,3,1,"","Creates or retrieves the context resource for the given key."],parent:[46,4,1,"","Parent context from which this context inherits."],spec:[47,4,1,"","Spec from which this context was constructed."]},"tensorstore.Context.Resource":{to_json:[38,3,1,"","Returns the JSON representation of the context resource."]},"tensorstore.Context.Spec":{__init__:[40,3,1,"","Creates a context specification from its JSON representation."],to_json:[41,3,1,"","Returns the JSON representation."]},"tensorstore.Context.Spec.to_json":{include_defaults:[41,5,2,"p-include_defaults","Indicates whether to include members even if they are equal to the default value."]},"tensorstore.Context.__getitem__":{key:[42,5,2,"p-key","Resource key, of the form '<resource-type>' or\n<resource-type>#<id>."]},"tensorstore.Context.__init__(json)":{json:[44,5,2,"p-json","JSON representation of the context."],parent:[44,5,2,"p-parent","Parent context from which to inherit."]},"tensorstore.Context.__init__(spec)":{parent:[45,5,2,"p-parent","Parent context from which to inherit."],spec:[45,5,2,"p-spec","Parsed context spec."]},"tensorstore.Dim":{"__init__(1)":[50,3,1,"","Constructs an unbounded interval."],"__init__(2)":[51,3,1,"","Constructs the interval [0, size)."],"__init__(3)":[52,3,1,"","Constructs a half-open interval."],"__init__(4)":[53,3,1,"","Constructs a closed interval."],"__init__(5)":[54,3,1,"","Constructs a sized interval."],__eq__:[49,3,1,"",""],implicit_lower:[55,4,1,"","Indicates if the lower bound is \"implicit\"."],implicit_upper:[56,4,1,"","Indicates if the upper bound is \"implicit\"."],label:[57,4,1,"","Dimension label, or the empty string to indicate an unlabeled dimension."]},"tensorstore.DimExpression":{__getitem__:[59,3,1,"",""],oindex:[60,3,1,"",""],vindex:[61,3,1,"",""]},"tensorstore.Future":{add_done_callback:[63,3,1,"",""],cancel:[64,3,1,"",""],cancelled:[65,3,1,"",""],done:[66,3,1,"",""],exception:[67,3,1,"",""],force:[68,3,1,"",""],remove_done_callback:[69,3,1,"",""],result:[70,3,1,"",""]},"tensorstore.IndexDomain":{"__getitem__(1)":[74,3,1,"",""],"__getitem__(2)":[75,3,1,"",""],"__getitem__(3)":[76,3,1,"",""],"__getitem__(4)":[77,3,1,"","Returns the result of applying a DimExpression."],"__init__(1)":[78,3,1,"",""],"__init__(2)":[79,3,1,"",""],__eq__:[73,3,1,"",""],exclusive_max:[80,4,1,"","Exclusive upper bound of the domain."],implicit_lower_bounds:[81,4,1,"","Implicit lower bounds"],implicit_upper_bounds:[82,4,1,"","Implicit upper bounds"],inclusive_max:[83,4,1,"","Inclusive upper bound of the domain."],inclusive_min:[84,4,1,"","Inclusive lower bound of the domain."],labels:[85,4,1,"","Dimension labels"],ndim:[86,4,1,"","Alias for rank."],origin:[87,4,1,"","Inclusive lower bound of the domain."],rank:[88,4,1,"","Number of dimensions in the index space."],shape:[89,4,1,"","Shape of the domain."],size:[90,4,1,"","Total number of elements in the domain."]},"tensorstore.IndexInterval":{"__init__(1)":[93,3,1,"","Constructs an unbounded interval."],"__init__(2)":[94,3,1,"","Constructs the interval [0, size)."],"__init__(3)":[95,3,1,"","Constructs a half-open interval."],"__init__(4)":[96,3,1,"","Constructs a closed interval."],"__init__(5)":[97,3,1,"","Constructs a sized interval."],__eq__:[92,3,1,"",""],empty:[98,4,1,"","Returns True if size is zero."],exclusive_max:[99,4,1,"","Returns the exclusive upper bound of the interval"],exclusive_min:[100,4,1,"","Returns the exclusive lower bound of the interval"],finite:[101,4,1,"","Returns True if the interval is finite."],inclusive_max:[102,4,1,"","Returns the inclusive upper bound of the interval"],inclusive_min:[103,4,1,"","Returns the inclusive lower bound of the interval"],size:[104,4,1,"","Returns the size of the interval"]},"tensorstore.IndexTransform":{"__getitem__(1)":[109,3,1,"","Applies an IndexTransform."],"__getitem__(2)":[110,3,1,"","Slices by IndexDomain."],"__getitem__(3)":[111,3,1,"","Applies a DimExpression."],"__getitem__(4)":[112,3,1,"",""],"__init__(1)":[113,3,1,"",""],"__init__(2)":[114,3,1,"",""],"__init__(3)":[115,3,1,"",""],T:[106,4,1,"","View with transposed domain (reversed dimension order)."],__call__:[107,3,1,"","Maps an input index vector to an output index vector."],__eq__:[108,3,1,"",""],domain:[116,4,1,"",""],implicit_lower_bounds:[117,4,1,"","Implicit lower bounds"],implicit_upper_bounds:[118,4,1,"","Implicit upper bounds"],input_exclusive_max:[119,4,1,"","Exclusive upper bound of the input domain."],input_inclusive_max:[120,4,1,"","Inclusive upper bound of the input domain."],input_inclusive_min:[121,4,1,"","Inclusive lower bound of the input domain."],input_labels:[122,4,1,"","Input dimension labels"],input_origin:[123,4,1,"","Inclusive lower bound of the input domain."],input_rank:[124,4,1,"","Rank of input space"],input_shape:[125,4,1,"","Shape of the input domain."],ndim:[126,4,1,"","Alias for input_rank."],oindex:[127,3,1,"",""],origin:[128,4,1,"","Inclusive lower bound of the domain."],output:[129,4,1,"","Returns the output index maps."],output_rank:[130,4,1,"","Rank of output space"],shape:[131,4,1,"","Shape of the domain."],size:[132,4,1,"","Total number of elements in the domain."],to_json:[133,3,1,"","Returns the JSON representation of the transform."],vindex:[134,3,1,"",""]},"tensorstore.OutputIndexMap":{"__init__(1)":[138,3,1,"","Constructs a constant map."],"__init__(2)":[139,3,1,"","Constructs a single input dimension map."],"__init__(3)":[140,3,1,"","Constructs an index array map."],__eq__:[137,3,1,"",""],index_array:[141,4,1,"",""],index_range:[142,4,1,"",""],input_dimension:[143,4,1,"",""],method:[144,4,1,"",""],offset:[145,4,1,"",""],stride:[146,4,1,"",""]},"tensorstore.OutputIndexMaps":{__eq__:[148,3,1,"",""],__getitem__:[149,3,1,"",""],rank:[150,4,1,"","Returns the output rank."]},"tensorstore.OutputIndexMethod":{__eq__:[152,3,1,"",""],__init__:[153,3,1,"",""],array:[154,6,1,"",""],constant:[155,6,1,"",""],name:[156,4,1,"",""],single_input_dimension:[157,6,1,"",""]},"tensorstore.Promise":{"new":[159,3,1,"",""],set_exception:[160,3,1,"",""],set_result:[161,3,1,"",""]},"tensorstore.Spec":{"__getitem__(1)":[165,3,1,"","Applies an IndexTransform."],"__getitem__(2)":[166,3,1,"","Slices by IndexDomain."],"__getitem__(3)":[167,3,1,"","Applies a DimExpression."],"__getitem__(4)":[168,3,1,"",""],T:[163,4,1,"","View with transposed domain (reversed dimension order)."],__eq__:[164,3,1,"",""],__init__:[169,3,1,"","Construct from JSON representation."],domain:[170,4,1,"","Returns the domain, or None if no transform has been specified."],dtype:[171,4,1,"",""],ndim:[172,4,1,"","Alias for rank."],oindex:[173,3,1,"",""],origin:[174,4,1,"","Inclusive lower bound of the domain."],rank:[175,4,1,"","Returns the rank, or None if no transform has been specified."],shape:[176,4,1,"","Shape of the domain."],size:[177,4,1,"","Total number of elements in the domain."],to_json:[178,3,1,"",""],transform:[179,4,1,"","The IndexTransform, or None."],vindex:[180,3,1,"",""]},"tensorstore.TensorStore":{"__getitem__(1)":[184,3,1,"","Applies an IndexTransform."],"__getitem__(2)":[185,3,1,"","Slices by IndexDomain."],"__getitem__(3)":[186,3,1,"","Applies a DimExpression."],"__getitem__(4)":[187,3,1,"",""],"__setitem__(1)":[188,3,1,"","Assigns to the result of applying an IndexTransform"],"__setitem__(2)":[189,3,1,"","Assigns to the result of applying a DimExpression"],"__setitem__(3)":[190,3,1,"","Assigns to the result of applying an IndexTransform"],"__setitem__(4)":[191,3,1,"","Assigns to the result of applying a DimExpression"],"__setitem__(5)":[192,3,1,"",""],"__setitem__(6)":[193,3,1,"",""],"write(1)":[217,3,1,"",""],"write(2)":[218,3,1,"",""],T:[182,4,1,"","View with transposed domain (reversed dimension order)."],__array__:[183,3,1,"",""],astype:[194,3,1,"","Returns a read/write view as the specified data type."],chunk_layout:[195,4,1,"","Chunk layout of the TensorStore"],domain:[196,4,1,"",""],dtype:[197,4,1,"",""],mode:[198,4,1,"",""],ndim:[199,4,1,"","Alias for rank."],oindex:[200,3,1,"",""],origin:[203,4,1,"","Inclusive lower bound of the domain."],rank:[204,4,1,"","Number of dimensions in the domain."],read:[205,3,1,"",""],readable:[206,4,1,"",""],resolve:[207,3,1,"",""],shape:[208,4,1,"","Shape of the domain."],size:[209,4,1,"","Total number of elements in the domain."],spec:[210,3,1,"",""],transaction:[211,4,1,"","Associated transaction used for read/write operations."],vindex:[212,3,1,"",""],with_transaction:[215,3,1,"","Returns a transaction-bound view of this TensorStore."],writable:[216,4,1,"",""]},"tensorstore.TensorStore.oindex":{"__setitem__(1)":[201,3,1,"",""],"__setitem__(2)":[202,3,1,"",""]},"tensorstore.TensorStore.vindex":{"__setitem__(1)":[213,3,1,"",""],"__setitem__(2)":[214,3,1,"",""]},"tensorstore.Transaction":{__init__:[220,3,1,"","Creates a new transaction."],abort:[221,3,1,"","Aborts the transaction."],aborted:[222,4,1,"","Indicates whether the transaction has been aborted."],atomic:[223,4,1,"","Indicates whether the transaction is atomic."],commit_async:[224,3,1,"","Asynchronously commits the transaction."],commit_started:[225,4,1,"","Indicates whether the commit of the transaction has already started."],commit_sync:[226,3,1,"","Synchronously commits the transaction."],future:[227,4,1,"","Commit result future."],open:[228,4,1,"","Indicates whether the transaction is still open."]},"tensorstore.WriteFutures":{add_done_callback:[230,3,1,"",""],cancel:[231,3,1,"",""],cancelled:[232,3,1,"",""],commit:[233,4,1,"",""],copy:[234,4,1,"",""],done:[235,3,1,"",""],exception:[236,3,1,"",""],remove_done_callback:[237,3,1,"",""],result:[238,3,1,"",""]},"tensorstore.d":{__class_getitem__:[247,3,1,"",""],__eq__:[248,3,1,"",""],__getitem__:[249,3,1,"",""],oindex:[250,3,1,"",""],vindex:[251,3,1,"",""]},"tensorstore.dtype":{"__init__(dtype)":[257,3,1,"","Construct from an existing TensorStore or NumPy data type."],"__init__(name)":[258,3,1,"","Construct by name."],__call__:[255,3,1,"","Construct a scalar instance of this data type"],__eq__:[256,3,1,"",""],name:[259,4,1,"",""],numpy_dtype:[260,4,1,"",""],to_json:[261,3,1,"",""],type:[262,4,1,"",""]},Context:{"&lt;resource-type&gt;":[0,1,2,"json-Context.<resource-type>",null],"&lt;resource-type&gt;#&lt;id&gt;":[0,1,2,"json-Context.<resource-type>#<id>",null],cache_pool:[0,0,1,"json-Context.cache_pool",""],data_copy_concurrency:[0,0,1,"json-Context.data_copy_concurrency",""],file_io_concurrency:[0,0,1,"json-Context.file_io_concurrency",""],gcs_request_concurrency:[14,0,1,"json-Context.gcs_request_concurrency",""],gcs_request_retries:[14,0,1,"json-Context.gcs_request_retries",""],gcs_user_project:[14,0,1,"json-Context.gcs_user_project",""],memory_key_value_store:[16,0,1,"json-Context.memory_key_value_store",""]},DownsampleMethod:{max:[3,1,2,"json-DownsampleMethod.max",""],mean:[3,1,2,"json-DownsampleMethod.mean",""],median:[3,1,2,"json-DownsampleMethod.median",""],min:[3,1,2,"json-DownsampleMethod.min",""],mode:[3,1,2,"json-DownsampleMethod.mode",""],stride:[3,1,2,"json-DownsampleMethod.stride",""]},IndexDomain:{exclusive_max:[11,1,2,"json-IndexDomain.exclusive_max","Exclusive upper bounds of the domain."],inclusive_max:[11,1,2,"json-IndexDomain.inclusive_max","Inclusive upper bounds of the domain."],inclusive_min:[11,1,2,"json-IndexDomain.inclusive_min","Inclusive lower bounds of the domain."],labels:[11,1,2,"json-IndexDomain.labels","Dimension labels for each dimension."],rank:[11,1,2,"json-IndexDomain.rank","Number of dimensions."],shape:[11,1,2,"json-IndexDomain.shape","Extent of each dimension of the domain."]},IndexTransform:{input_exclusive_max:[11,1,2,"json-IndexTransform.input_exclusive_max","Exclusive upper bounds of the input domain."],input_inclusive_max:[11,1,2,"json-IndexTransform.input_inclusive_max","Inclusive upper bounds of the input domain."],input_inclusive_min:[11,1,2,"json-IndexTransform.input_inclusive_min","Inclusive lower bounds of the input domain."],input_labels:[11,1,2,"json-IndexTransform.input_labels","Dimension labels for each input domain dimension."],input_rank:[11,1,2,"json-IndexTransform.input_rank","Number of input dimensions."],input_shape:[11,1,2,"json-IndexTransform.input_shape","Extent of each dimension of the input domain."],output:[11,1,2,"json-IndexTransform.output","Specifies the output index map for each output dimension."]},KeyValueStore:{context:[15,1,2,"json-KeyValueStore.context",""],driver:[15,1,2,"json-KeyValueStore.driver","Key-value store driver identifier"]},KeyValueStoreBackedChunkDriver:{cache_pool:[4,1,2,"json-KeyValueStoreBackedChunkDriver.cache_pool",""],context:[4,1,2,"json-KeyValueStoreBackedChunkDriver.context","Specifies context resources that augment/override the parent context."],create:[4,1,2,"json-KeyValueStoreBackedChunkDriver.create",""],data_copy_concurrency:[4,1,2,"json-KeyValueStoreBackedChunkDriver.data_copy_concurrency",""],delete_existing:[4,1,2,"json-KeyValueStoreBackedChunkDriver.delete_existing",""],driver:[4,1,2,"json-KeyValueStoreBackedChunkDriver.driver","Driver identifier"],dtype:[4,1,2,"json-KeyValueStoreBackedChunkDriver.dtype","Specifies the data type."],kvstore:[4,1,2,"json-KeyValueStoreBackedChunkDriver.kvstore",""],open:[4,1,2,"json-KeyValueStoreBackedChunkDriver.open",""],path:[4,1,2,"json-KeyValueStoreBackedChunkDriver.path",""],rank:[4,1,2,"json-KeyValueStoreBackedChunkDriver.rank","Specifies the rank of the TensorStore."],recheck_cached_data:[4,1,2,"json-KeyValueStoreBackedChunkDriver.recheck_cached_data",""],recheck_cached_metadata:[4,1,2,"json-KeyValueStoreBackedChunkDriver.recheck_cached_metadata",""],transform:[4,1,2,"json-KeyValueStoreBackedChunkDriver.transform","Specifies a transform."]},OutputIndexMap:{index_array:[11,1,2,"json-OutputIndexMap.index_array","If present, indicates that this output dimension uses an index\narray map, with the index array specified as a nested list of rank\nequal to the input_rank."],index_array_bounds:[11,1,2,"json-OutputIndexMap.index_array_bounds",""],input_dimension:[11,1,2,"json-OutputIndexMap.input_dimension","If present, indicates that this output dimension uses a single\ninput dimension map with the specified input dimension.  Must not\nbe specified in conjunction with index_array."],offset:[11,1,2,"json-OutputIndexMap.offset","Specifies an offset for this output dimension.  If neither\ninput_dimension nor index_array is\nspecified, this specifies the constant value to which this output\ndimension maps."],stride:[11,1,2,"json-OutputIndexMap.stride","Multiplier for the input index specified by\ninput_dimension or the index array value specified by\nindex_array."]},TensorStore:{context:[282,1,2,"json-TensorStore.context","Specifies context resources that augment/override the parent context."],driver:[282,1,2,"json-TensorStore.driver","Driver identifier"],dtype:[282,1,2,"json-TensorStore.dtype","Specifies the data type."],rank:[282,1,2,"json-TensorStore.rank","Specifies the rank of the TensorStore."],transform:[282,1,2,"json-TensorStore.transform","Specifies a transform."]},dtype:{"byte":[282,1,2,"json-dtype.byte","Single byte."],"char":[282,1,2,"json-dtype.char","Single byte, interpreted as an ASCII character."],bfloat16:[282,1,2,"json-dtype.bfloat16","bfloat16 floating-point format number."],bool:[282,1,2,"json-dtype.bool","Boolean value (0 or 1)."],complex128:[282,1,2,"json-dtype.complex128","Complex number, where the real and imaginary components are each\nrepresented by a float64."],complex64:[282,1,2,"json-dtype.complex64","Complex number, where the real and imaginary components are each\nrepresented by a float32."],float16:[282,1,2,"json-dtype.float16","IEEE 754 binary16\nhalf-precision floating-point number."],float32:[282,1,2,"json-dtype.float32","IEEE 754 binary32\nsingle-precision floating-point number."],float64:[282,1,2,"json-dtype.float64","IEEE 754 binary64\ndouble-precision floating-point number."],int16:[282,1,2,"json-dtype.int16","/tmp/tmp20vgpsw6/tensorstore_schema.yml:58: (INFO/1) Duplicate explicit target name: \"two's-complement\".16-bit signed two's-complement integer."],int32:[282,1,2,"json-dtype.int32","/tmp/tmp20vgpsw6/tensorstore_schema.yml:62: (INFO/1) Duplicate explicit target name: \"two's-complement\".32-bit signed two's-complement integer."],int64:[282,1,2,"json-dtype.int64","/tmp/tmp20vgpsw6/tensorstore_schema.yml:66: (INFO/1) Duplicate explicit target name: \"two's-complement\".64-bit signed two's-complement integer."],int8:[282,1,2,"json-dtype.int8","8-bit signed two's-complement integer."],json:[282,1,2,"json-dtype.json","JSON value."],string:[282,1,2,"json-dtype.string","Byte string."],uint16:[282,1,2,"json-dtype.uint16","16-bit unsigned integer."],uint32:[282,1,2,"json-dtype.uint32","32-bit unsigned integer."],uint64:[282,1,2,"json-dtype.uint64","64-bit unsigned integer."],uint8:[282,1,2,"json-dtype.uint8","8-bit unsigned integer."],ustring:[282,1,2,"json-dtype.ustring","Unicode string (represented in memory as UTF-8)."]},tensorstore:{"array(1)":[239,7,1,"","Returns a TensorStore that reads/writes from an in-memory array."],"array(2)":[240,7,1,"","Returns a TensorStore that reads/writes from an in-memory array."],"downsample(spec)":[252,7,1,"","Returns a virtual downsampled view view of a Spec."],"downsample(store)":[253,7,1,"","Returns a virtual downsampled view of a TensorStore."],ChunkLayout:[18,2,1,"",""],Context:[36,2,1,"","Manages shared TensorStore context resources, such as caches and credentials."],Dim:[48,2,1,"","Index interval with optionally-implicit bounds and dimension label."],DimExpression:[58,2,1,"",""],Future:[62,2,1,"","Handle for consuming the result of an asynchronous operation."],Index:[71,2,1,"","Array index"],IndexDomain:[72,2,1,"","Specifies bounds and dimension labels of an N-dimensional index space."],IndexInterval:[91,2,1,"","Represents an interval of index values, with support for +/-inf bounds."],IndexTransform:[105,2,1,"","Represents a transform between two index spaces."],Indexable:[135,2,1,"","Abstract base class for types that support TensorStore indexing operations."],OutputIndexMap:[136,2,1,"","Represents an output index map for an index transform."],OutputIndexMaps:[147,2,1,"","View of the output index maps for an index transform."],OutputIndexMethod:[151,2,1,"","Members:"],Promise:[158,2,1,"","Handle for producing the result of an asynchronous operation."],Spec:[162,2,1,"","Specification for opening or creating a TensorStore."],TensorStore:[181,2,1,"",""],Transaction:[219,2,1,"","Transactions are used to stage a group of modifications (e.g. writes to\ntensorstore.TensorStore objects) in memory, and then either commit the\ngroup all at once or abort it."],WriteFutures:[229,2,1,"","Handle for consuming the result of an asynchronous write operation."],bfloat16:[241,8,1,"","bfloat16 floating-point data type."],bool:[242,8,1,"","Boolean data type (0 or 1).  Corresponds to the python:bool type and numpy.bool_."],cast:[243,7,1,"","Returns a read/write TensorStore view as the specified data type."],complex128:[244,8,1,"","Complex number based on float64.  Corresponds to numpy.complex128."],complex64:[245,8,1,"","Complex number based on float32.  Corresponds to numpy.complex64."],d:[246,2,1,"","Specifies a dimension selection, a sequence of index space dimensions."],dtype:[254,2,1,"","TensorStore data type representation."],float16:[263,8,1,"","IEEE 754 binary16 half-precision floating-point data type.  Correspond to numpy.float16."],float32:[264,8,1,"","IEEE 754 binary32 single-precision floating-point data type.  Corresponds to numpy.float32."],float64:[265,8,1,"","IEEE 754 binary64 double-precision floating-point data type.  Corresponds to numpy.float64."],inf:[266,8,1,"","Special constant equal to 2^{62}-1 that indicates an unbounded index domain."],int16:[267,8,1,"","16-bit signed two's-complement integer data type.  Corresponds to numpy.int16."],int32:[268,8,1,"","32-bit signed two's-complement integer data type.  Corresponds to numpy.int32."],int64:[269,8,1,"","32-bit signed two's-complement integer data type.  Corresponds to numpy.int64."],int8:[270,8,1,"","8-bit signed two's-complement integer data type.  Corresponds to numpy.int8."],json:[271,8,1,"","JSON data type.  Corresponds to an arbitrary Python JSON value."],newaxis:[272,8,1,"","Alias for None used in indexing expressions to specify a new singleton dimension."],open:[273,7,1,"","Opens a TensorStore"],string:[274,8,1,"","Variable-length byte string data type.  Corresponds to the Python python:bytes type."],uint16:[275,8,1,"","16-bit unsigned integer.  Corresponds to numpy.uint16."],uint32:[276,8,1,"","32-bit unsigned integer.  Corresponds to numpy.uint32."],uint64:[277,8,1,"","64-bit unsigned integer data type.  Corresponds to numpy.uint64."],uint8:[278,8,1,"","8-bit unsigned integer.  Corresponds to numpy.uint8."],ustring:[279,8,1,"","Variable-length Unicode string data type.  Corresponds to the Python python:str type."]}},objnames:{"0":["json","schema","JSON type"],"1":["json","subschema","JSON member"],"2":["py","class","Python class"],"3":["py","method","Python method"],"4":["py","property","Python property"],"5":["py","parameter","Python parameter"],"6":["py","attribute","Python attribute"],"7":["py","function","Python function"],"8":["py","data","Python data"],"9":["std","envvar","environment variable"]},objtypes:{"0":"json:schema","1":"json:subschema","2":"py:class","3":"py:method","4":"py:property","5":"py:parameter","6":"py:attribute","7":"py:function","8":"py:data","9":"std:envvar"},terms:{"0x8":281,"100":[7,8,11,281],"1000":[8,281],"10000":7,"10000000":[0,38,42,46,47],"100000000":[0,281],"100_000_000":281,"100kb":6,"100mb":281,"100x100x1":281,"102":281,"1132030694":281,"1161117856":281,"1194100437":281,"1408314276":281,"15000":281,"15100":281,"20000":281,"2019":12,"30037":12,"34432":281,"357":280,"39552":281,"40000":7,"41408":281,"4611686018427387903":[17,266],"4_4_40":7,"500":[6,7,8],"50000":7,"5000000":[44,46,47],"5813054053":281,"6901":5,"754":[17,263,264,265,282],"abstract":[10,17,135],"boolean":[4,6,7,8,16,17,242,282],"byte":[0,6,8,17,274,282],"case":[3,9,11,12,14,280],"char":282,"class":[19,37,39,48,58,62,71,72,91,105,135,136,147,151,158,162,181,219,229,246,254],"default":[0,4,5,6,7,8,9,11,12,14,36,41,43,44,45,280],"export":12,"float":[17,62,67,70,229,236,238,241,263,264,265,282],"function":[3,7,11,281],"import":281,"int":[17,18,19,21,22,25,27,28,29,30,48,51,52,53,54,62,69,72,74,78,80,83,84,86,87,88,89,90,91,94,95,96,97,99,100,102,103,104,105,107,113,119,120,121,123,124,125,126,128,130,131,132,136,138,139,140,143,145,146,147,149,150,151,153,162,172,174,175,176,177,181,199,203,204,208,209,229,237,252,253,266,280],"new":[0,4,6,7,8,10,11,17,44,45,158,159,219,220,272,280,281],"null":[0,7,8,274,279],"public":[14,281],"return":[3,4,5,6,7,8,11,17,37,38,39,41,42,43,44,45,48,62,72,77,91,98,99,100,101,102,103,104,105,129,133,147,150,162,170,175,181,194,215,224,226,239,240,243,252,253],"static":[158,159],"transient":[14,16],"true":[4,5,6,7,8,16,43,48,50,91,98,101,158,178,219,280,281],"while":[3,6,7,8,11,12,274,279,280,281],For:[3,5,10,11,12,14,229],Has:[221,224],IDs:7,One:[0,3,4,6,8,282],TLS:12,The:[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,16,42,62,162,179,215,219,228,229,274,279,280,282],There:[12,271,274,279,281,282],Use:[12,281],Used:0,With:[4,5,6,7,8],__array__:[181,183],__call__:[105,107,254,255],__eq__:[18,19,20,23,48,49,72,73,91,92,105,108,136,137,147,148,151,152,162,164,246,248,254,256],__getitem__:[36,42,58,59,72,74,75,76,77,105,109,110,111,112,147,149,162,165,166,167,168,181,184,185,186,187,246,249],__index__:280,__setitem__:[181,188,189,190,191,192,193,201,202,213,214],_arrai:11,_bit:7,_dimens:11,_origin:11,_rank:11,_shape:11,abort:[17,219,221,222,224,226,227,228],abov:[11,280],access:[5,6,7,8,10,11,13,14,15,229,280,281],accord:[8,11,12],account:14,achiev:[6,8],acid:10,actual:280,adapt:1,add:[12,280],add_done_callback:[62,63,229,230],added:[12,280],adding:280,addit:[3,9,11,12,14,219,228,229,280],addition:[11,12,219,280],address:9,advanc:[10,280],advantag:10,advis:7,affect:12,after:[4,5,6,7,8,12,229,280],alia:[17,18,29,72,86,105,126,162,172,181,199,272],align:12,all:[0,3,4,6,7,8,9,10,11,15,16,17,219,280,282],all_proxi:9,allow:[0,11,12,13,14,219],allus:14,alreadi:[4,6,7,8,11,12,219,221,224,225],also:[1,2,3,4,6,7,8,10,11,12,13,219,229,241,280,281,282],altern:[9,280],alwai:[3,4,5,6,7,8,280],among:3,analog:10,ancestor:5,ani:[2,4,5,6,7,8,9,11,14,18,24,33,36,37,38,39,40,41,44,105,115,133,162,169,178,219,228,280,281],anoth:[0,280],api:[1,9,10,14],appl:12,appli:[0,1,2,3,4,5,6,7,8,9,11,14,72,77,105,109,111,162,165,167,181,184,186,188,189,190,191,246,280,282],applic:[12,14],application_default_credenti:14,appropri:14,arbitrari:[11,17,271,280],archiv:12,aren:12,arg0:[18,19,20,23,48,49,72,73,74,75,76,77,91,92,105,108,136,137,147,148,149,158,160,161,181,215,246,248,254,255],arg:280,argument:280,arithmet:3,arrai:[3,4,5,6,7,8,10,11,15,17,62,71,136,140,151,154,219,239,240,241,281,282],array_lik:[17,136,140,141,181,183,190,191,193,202,205,214,218,239,240,280],ascii:282,assert:[46,266],assign:[7,11,181,188,189,190,191,280,281],associ:[181,211,224],assum:[4,5,6,7,8,11],astyp:[181,194],async:[219,281],asynchron:[10,62,158,219,224,229,281],asyncio:[62,281],atom:[5,10,16,219,220,223],attempt:[5,14,280],attribut:[5,6,280],augment:[1,2,3,4,5,6,7,8,13,14,15,16,282],auth:14,authent:[0,9],author:[9,14],automat:[8,10,11,12,14,219],avail:[0,9,12,241],averag:3,avoid:[7,280],await:[62,219,280,281],awar:280,axes:6,back:[1,6,7,8,10,219,281],bandwidth:10,base:[2,3,7,8,11,17,135,244,245,252,253,280],basic:280,bazel:12,bazel_cach:12,bazel_tool:12,bazelisk:12,bazelisk_hom:12,bazelrc:12,bdbe37905216:12,bdist_wheel:12,bear:7,becaus:[5,7,280],becom:227,been:[8,11,162,170,175,219,221,222,224,227,228],befor:[4,6,7,8],begin:280,behavior:[9,11,12,16,280],being:[4,5,6,7,8,12,219],below:11,best:[6,7,8],between:[11,17,105],bfloat16:[8,17,241,282],big:[6,282],bill:14,binari:12,binary16:[17,263,282],binary32:[17,264,282],binary64:[17,265,282],bind:12,bit:[6,7,8,11,17,267,268,269,270,275,276,277,278,282],block:[3,6,7,8,13,62,219],blocksiz:[6,8,219,281],blosc:[6,8,12],blosclz:[6,8],bool:[3,17,18,19,20,23,33,37,38,39,41,48,49,50,51,52,53,54,55,56,62,64,65,66,72,73,78,81,82,91,92,98,101,105,108,113,117,118,136,137,147,148,151,152,162,164,178,181,206,207,216,219,220,222,223,225,228,229,231,232,235,242,246,248,254,256,273,280,282],bool_:[17,242],boringssl:12,both:[4,6,7,8,11],bound:[3,4,6,7,8,11,17,48,55,56,72,80,81,82,83,84,87,91,99,100,102,103,105,117,118,119,120,121,123,128,162,174,181,203,215,280],broadcast:280,bsd:9,bucket:[2,3,5,7,8,14,281],buffer:[3,8],bug:12,build:10,build_def:12,build_doc:12,build_ext:12,built:[9,12,241,280],bundl:[9,12],bz2:8,bzip2:[6,8,12],bzl:12,c_rehash:9,cach:[0,4,5,6,7,8,10,12,17,36,281],cache_pool:[0,4,5,6,7,8,38,42,44,46,47,281],cacherevalidationbound:[4,5,6,7,8],cafil:14,call:[43,62,221,224,280],callback:[62,63,69,229,230,237],can:[9,10,11,12,14,219,280,281],cancel:[62,64,65,229,231,232],cannot:219,capabl:[8,280],capath:14,care:7,cartesian:72,cast:[4,17,243,282],caus:[8,280],cdot:11,cert:[9,14],certain:11,certif:12,chain:280,chang:[11,12,219],channel:[7,281],charact:[12,282],check:[4,6,7,8,224,280],child:[46,47],choic:7,chosen:[3,7,8],chunk:[6,7,8,10,18,19,21,22,26,31,32,34,35,181,195],chunk_layout:[181,195],chunk_siz:[7,281],chunklayout:[17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,181,195],circumst:4,clang:12,clevel:[6,8],clone:12,close:[11,48,53,91,96],cloud:[10,14,15,281],cloudsdk_config:14,cmake:12,cname:[6,8],coalesc:219,code:12,codec:[18,26],codec_chunk:[18,25,26],com:12,com_facebook_zstd:12,com_github_google_tensorstor:12,com_google_boringssl:12,com_google_snappi:12,combin:280,comma:[9,12],command:[9,12],commit:[17,219,224,225,226,227,228,229,233],commit_async:[219,221,224,226],commit_start:[219,225],commit_sync:[219,224,226],common:[3,4,9,15,280],compat:[0,9,11,12,280,281],compil:12,complement:[17,267,268,269,270,282],complet:[11,62,158,229,280,281],complex128:[17,244,282],complex64:[17,245,282],complex:[3,17,244,245,282],compon:282,compos:[2,10,11],composit:11,compress:[7,8,219,281],compressed_segment:[7,281],compressed_segmentation_block_s:[7,281],compressor:6,comput:[3,11,14,280],concaten:9,concurr:[0,5,10,13,14,62],condit:14,config:14,configur:[0,10,14],confus:280,conjunct:11,connect:[9,10,14],consecut:280,consist:[4,5,6,7,8,10,280],constant:[1,11,17,136,138,151,155,266,280],constrain:[7,10,11,280],constraint:[1,2,3,4,6,7,8,11,282],construct:[18,19,21,24,25,36,43,44,45,47,48,50,51,52,53,54,91,93,94,95,96,97,136,138,139,140,162,169,254,255,257,258],constructor:43,consum:[17,62,229,280],contain:[3,5,9,11,12,280,281],containerkind:[136,142],content:13,context:[1,2,3,4,5,6,7,8,10,13,14,15,16,17,36,37,38,39,40,41,42,43,44,45,46,47,183,219,239,240,273,281,282],contextresourc:[0,4,5,6,7,8,13,14,16],contigu:1,contrast:280,contribut:7,conveni:[4,5,6,7,8,14],convers:[2,281],convert:[2,18,33,280],coordin:280,copi:[0,11,12,229,234,280],core:[0,10,280],correctli:11,correspond:[6,8,11,14,17,62,158,229,241,242,244,245,263,264,265,267,268,269,270,271,274,275,276,277,278,279,280,282],cost:11,cpu:0,creat:[4,5,6,7,8,10,12,17,36,39,40,42,162,219,220,273,281,282],credenti:[0,14,17,36,281],crt:[9,14],curl:[12,14],current:[0,8,11,12,62,219,281],dask:280,data:[0,1,2,3,4,5,6,7,8,10,15,16,181,194,241,242,243,254,255,257,263,264,265,267,268,269,270,271,274,277,279,280,282],data_copy_concurr:[0,4,5,6,7,8],data_encod:281,data_index_encod:7,data_typ:7,databas:10,dataset:[6,219],dataset_3d:281,dataset_futur:281,datatyp:[6,219,281],date:12,datetim:8,deadlin:[67,70,236,238],decod:[0,10],decrypt:9,defer:280,defin:[0,4,5,6,7,8,11,13,14,16,241,280],delet:[4,6,7,8],delete_exist:[4,6,7,8,219,273,281],demonstr:281,denot:280,depend:[9,14,280,282],deprec:280,describ:11,detail:[9,10],determin:[4,6,7,11],determinist:3,develop:14,dexpr:280,diagon:280,differ:[3,11,15,62,274,279],dim:[17,48,49,50,51,52,53,54,55,56,57,72,74,79,266],dimens:[3,6,7,8,10,11,17,18,30,48,57,72,79,85,88,105,106,122,136,139,162,163,181,182,204,219,246,272,281],dimension:[3,10,11,17,72,280],dimexpress:[17,58,59,60,61,72,77,105,111,162,167,181,186,189,191,280],directli:[0,1,2,3,4,6,7,8,11,12,13,14,280,282],directori:[9,12,13],disabl:[8,9],dist:12,distribut:[9,12],divid:280,doc:12,document:[9,15,282],doe:[4,6,7,8,9,11,12,13,43,241,280],domain:[3,10,17,62,72,80,83,84,87,89,90,105,106,110,114,116,119,120,121,123,125,128,131,132,162,163,166,170,174,176,177,181,182,185,196,203,204,208,209,266,272,280,281],domin:280,don:12,done:[10,12,14,62,66,158,229,235],doubl:[17,265,282],download:12,downsampl:[4,17,252,253,282],downsample_factor:[3,17,252,253],downsample_method:3,downsamplemethod:[3,252,253],driver:[0,10,62,219,280,281,282],drop:11,dtype:[1,2,3,4,5,6,7,8,17,62,162,171,181,183,194,197,219,240,241,242,243,244,245,254,255,256,257,258,259,260,261,262,263,264,265,267,268,269,270,271,274,275,276,277,278,279,280,281,282],due:13,dummi:280,duplic:280,durabl:[10,229],dynam:9,each:[0,3,4,5,6,7,8,9,11,43,280,282],earlier:12,effect:[11,221,224,280],effici:[3,7,10,11,18,31,32,34,35,219,282],effort:12,either:[4,6,7,8,11,14,17,219,227,280],element:[2,3,8,72,90,105,132,162,177,181,209,280],empti:[5,6,11,48,57,91,98,280],enabl:[4,6,7,8,10,14],encod:[0,6,7,8,10,12,281,282],end:280,endian:[6,8,282],engin:14,enhanc:280,ensur:[12,62,219,280],entir:[5,7,11,280,282],environ:[12,14],epoch:4,equal:[0,1,6,7,11,17,41,266,280],equival:[3,6,106,128,131,132,163,174,176,177,182,203,204,208,209,226,280],error:[5,11,14,62,226,280],escap:12,etc:[3,9,12,14],even:[3,5,10,41,280],everi:[4,5,6,7,8,10,11],evict:0,exactli:[3,6,7,8,280],exampl:[12,219,281],except:[7,8,62,67,219,229,236,280],excess:7,exclus:[11,48,72,80,91,99,100,105,119,280],exclusive_max:[11,48,52,72,78,80,91,95,99,280],exclusive_min:[48,91,100],execut:[0,12],exist:[1,4,5,6,7,8,12,254,257,280],exit:219,expect:[9,12,280],explicit:[4,6,7,8,11,280],explicitli:[7,280],expos:5,expr:[105,111,162,167,181,186,280],express:[10,17,246,272],extend:[1,2,3,4,5,6,7,8,11,13,14,16],extens:[8,12,241],extent:[11,90],extern:219,facil:9,factor:3,fail:[14,219,280],fals:[4,6,7,8,16,18,33,37,38,39,41,51,158,162,178,181,207,219,220,280],faster:12,fastest:[6,8,12],fetch:12,few:280,fewer:[0,280],field:8,file:[5,6,7,8,9,10,12,14,15,16,219,281],file_io_concurr:[0,13,46,47],filesystem:[0,10,13,15,281],fill:[6,8,10,281],fill_valu:8,filter:8,find:[9,12],finit:[11,48,91,101],first:[7,11,12,280],fix:[274,279],fix_resizable_bound:[181,207],flag:12,flatten:280,float16:[17,263,282],float32:[6,7,17,245,264,282],float64:[6,17,244,265,282],fly:3,flyeem:281,follow:[3,6,8,9,11,12,14,280,282],forc:[62,68],form:[11,42,280],format:[7,8,9,10,282],fortran:8,forward:229,framework:36,frequent:3,fresh:[4,5,6,7,8],from:[0,1,2,3,4,5,6,7,8,10,11,13,14,17,18,24,36,39,40,44,45,46,47,162,169,219,239,240,254,257,280,281],full:[5,11,16,280],fulli:[8,10,11],futur:[12,17,62,63,64,65,66,67,68,69,70,158,181,205,207,219,224,227,229,233,234,273,281],gcc:12,gce:14,gcloud:14,gcs:[2,3,5,7,8,15,16,281],gcs_request_concurr:14,gcs_request_retri:14,gcs_user_project:14,gener:[12,280],git:12,github:12,given:[0,3,13,36,42,280],global:[0,14],good:7,googl:[10,12,14,281],google_application_credenti:[9,14],grid:[18,19,20,21,22,25,26,27,31,34],grid_origin:[18,25,27],group:[7,17,219],guarante:[5,10,219,229,241],guid:10,gzip:[6,7,8,281],half:[0,17,48,52,91,95,263,282],handl:[14,17,36,37,42,62,158,229],hard:11,has:[7,8,11,14,162,170,175,219,221,222,224,225,227,228,229,280],hash:[7,281],have:[6,8,11,12,14,219,241,280,281],header:[6,8],high:10,higher:[6,8],hit:281,hold:229,hostnam:9,how:[9,14],howev:[3,12,14,62],http:[12,14],http_archiv:12,http_proxi:9,https_proxi:9,ident:[7,11,281],identifi:[0,4,6,8,11,12,15,280,282],ieee:[17,263,264,265,282],iexpr:280,ijg:7,imag:7,imaginari:282,immedi:[11,280],immut:280,implement:[5,10,12],implicit:[11,17,48,55,56,72,81,82,105,117,118,280],implicit_low:[48,50,51,52,53,54,55],implicit_lower_bound:[72,78,81,105,113,117,280],implicit_upp:[48,50,51,52,53,54,56],implicit_upper_bound:[72,78,82,105,113,118],implicitli:[11,280,281],impos:11,improv:219,includ:[10,12,16,41,280],include_context:178,include_default:[18,33,37,38,39,41,162,178],inclus:[11,48,72,83,84,87,91,102,103,105,120,121,123,128,162,174,181,203,280],inclusive_max:[11,48,53,72,78,83,91,96,102,266],inclusive_min:[11,48,52,53,54,72,78,84,91,95,96,97,103,266],inconsist:5,increment:12,independ:[7,11],index:[3,7,10,18,30,48,71,72,88,91,105,107,129,135,136,140,147,246,266,272],index_arrai:[11,136,140,141],index_array_bound:11,index_rang:[136,140,142],indexdomain:[11,17,18,32,35,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,105,110,114,116,162,166,170,181,185,196,280],indexdomaindimens:[136,142],indexerror:280,indexinterv:[11,17,91,92,93,94,95,96,97,98,99,100,101,102,103,104,140],indextransform:[1,2,3,4,5,6,7,8,11,17,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,162,165,179,181,184,188,190,272,280,282],indic:[3,6,7,8,11,17,41,48,55,56,57,58,59,60,61,105,107,112,127,134,162,168,173,180,181,187,192,193,200,201,202,212,213,214,219,222,223,225,228,229,246,249,250,251,266,280],indicaet:6,individu:[5,7,280],ineffici:7,inf:[11,17,48,51,52,53,54,91,94,95,96,97,266,272,280],infinit:11,info:7,inform:[9,12,14],infti:11,inherit:[36,44,45,46],init:0,initi:[1,12,280],inlin:280,inner_ord:[18,25,28],input:[1,2,3,4,6,7,8,11,105,107,119,120,121,122,123,124,125,136,139,272,280,282],input_dimens:[11,136,139,143,280,281],input_exclusive_max:[11,62,105,113,119,280,281],input_inclusive_max:[11,105,113,120],input_inclusive_min:[11,62,105,113,121,280,281],input_label:[11,105,113,122,280,281],input_origin:[105,123],input_rank:[11,105,113,124,126,272,280],input_shap:[11,105,113,125,280],insert:280,instal:[10,14],instanc:[0,43,254,255],instead:[9,12,62,280],instruct:10,int16:[6,17,267,282],int32:[1,2,6,17,268,280,282],int64:[6,17,269,282],int8:[6,17,270,282],integ:[0,1,2,3,4,6,7,8,11,14,17,267,268,269,270,275,276,277,278,282],integr:280,intend:12,interfac:[10,62,158,229],interleav:280,intermedi:280,internal_python:[246,249,250,251],interoper:[241,281],interpret:[280,282],interv:[3,11,17,48,50,51,52,53,54,91,93,94,95,96,97,99,100,101,102,103,104],introduc:10,introspect:42,invoc:[12,280],invok:12,involv:[11,280],isol:[10,219],its:[11,13,36,39,40,44,280],itself:[5,229,280],jax:[8,241],jpeg:[7,12],jpeg_qual:7,json:[0,1,2,3,4,6,8,9,10,11,13,14,15,16,17,18,24,33,36,37,38,39,40,41,44,105,115,133,162,169,271],json_point:5,just:[11,280,281],kei:[5,6,7,8,10,36,42,219,281],kept:[7,12],key_encod:8,keyvaluestor:[4,5,6,7,8,13,14,15,16],keyvaluestorebackedchunkdriv:[4,6,7,8,282],keyword:62,kvstore:[2,3,4,5,6,7,8,13,14,15,16,219,281],label:[6,10,11,17,48,50,51,52,53,54,57,72,78,85,105,122,280],lambda:62,larg:10,larger:[11,281],largest:7,last:[11,280],latenc:10,later:[12,13],latest:12,layer:[5,6,7,8],layout:[8,10,181,195],lead:11,least:[0,11,280],left:[7,11],legaci:280,length:[3,6,8,11,17,274,279,280],leq:11,less:[11,280],level:[2,6,8,10,281],lexicograph:3,libcurl:9,libjpeg:12,librari:[8,10,280],lightweight:280,like:[9,10,14,280],likewis:280,limit:[0,10,11,14,46,47,229],link:[9,12],linux:[9,12],list:[9,11,12,19,21,25,252,253,280],liter:280,littl:[8,282],load:12,local:[0,9,10,13,14,15],locat:[9,14],lock:13,logic:[11,72,282],login:14,longer:229,lost:5,low:[7,11],lower:[3,11,48,55,72,81,84,87,91,100,103,105,117,121,123,128,162,174,181,203,280],lowest:3,lru:0,lz4:[6,8,12],lz4hc:[6,8],mac:9,machin:[10,13,14],maco:12,made:219,mai:[0,3,5,6,7,8,9,11,12,16,158,215,224,228,246,280,282],make:[9,12],manag:[17,36,219],mani:[9,11,14,280],manipul:16,manual:[11,12],map:[0,7,11,17,105,107,129,136,138,139,140,147,272,280],mark:[11,280],match:[0,1,2,3,4,6,7,8,11,16,280,282],mathrm:[7,11],mathtt:11,max:3,max_retri:14,maximum:[0,3,14],mayb:12,mean:[3,4,5,6,7,8,280],mechan:[4,5,6,7,8,10,229,280],median:3,member:[0,1,2,3,4,5,6,7,8,11,13,14,15,16,41,282],memori:[0,1,4,6,7,8,10,11,15,17,219,239,240,281,282],memory_key_value_stor:16,mere:229,metadata:[4,6,7,8,14,219,281],metdata:6,method:[3,6,8,14,136,144,252,253,280,281],microsoft:12,middl:281,min:[3,11],minim:280,minimum:3,minishard:7,minishard_bit:[7,281],minishard_index_encod:[7,281],mismatch:11,mix:280,mode:[3,12,181,198,219],model:8,modif:[17,219],modifi:[5,11],modul:12,more:[4,5,6,7,8,9,11,12,280,282],most:[3,7,9,11,14,15,280],msvc:12,much:12,multi:[10,16],multipl:[0,3,7,8,10,11,12,13,14,16,219,280],multipli:11,multiscal:7,multiscale_metadata:[7,281],murmurhash3_x86_128:7,must:[0,1,2,3,4,5,6,7,8,9,11,12,14,43,280,282],name:[8,12,151,156,254,258,259,280],nanomet:7,nasm:12,nativ:10,ndarrai:[280,281],ndim:[18,29,72,86,105,126,162,172,181,199],nearest:3,necessari:[9,11,282],necessarili:280,need:[11,12,280],neg:280,neither:[4,5,6,7,8,11],neq:11,nest:[1,11],nesteddirectorystor:8,net_zlib:12,network:[10,13,14],neuroglanc:[7,10,281],neuroglancer_precomput:[4,281],neuroglancer_uint64_sharded_v1:[7,281],never:[4,280],newaxi:[17,272,280],nghttp2:12,no_proxi:9,non:[3,4,5,6,7,8,11,12,14,219,229,280],none:[11,14,17,18,19,21,25,28,36,43,44,45,48,50,51,52,53,54,62,63,67,68,70,72,78,91,94,95,96,97,105,113,114,136,141,143,146,158,160,161,162,170,171,172,175,179,181,183,205,219,221,224,226,227,229,230,236,238,239,240,272,273,280],nonzero:280,nor:[4,6,7,8,11],normal:[4,5,6,7,8,11,12,219],note:[3,6,9,11,12],num_channel:[7,281],number:[0,3,4,7,11,12,14,17,18,30,72,88,90,105,132,162,177,181,204,209,244,245,280,282],numer:[3,11,280],numpi:[8,11,17,241,242,244,245,254,257,263,264,265,267,268,269,270,271,274,275,276,277,278,279,281],numpy_dtyp:[254,260],numpyindexingspec:[58,59,60,61,105,112,127,134,162,168,173,180,181,187,192,193,200,201,202,212,213,214,249,250,251],obj:280,object:[0,1,2,3,4,5,6,7,8,11,13,14,15,16,17,62,63,67,69,70,72,151,152,158,160,161,183,219,229,230,236,237,238,254,255,262,280,281,282],object_:[271,274,279],observ:219,obtain:[280,281],occupi:282,occur:[11,62,280],odd:3,offer:3,offici:8,offset:[3,11,136,138,139,140,145,280,281],often:14,oindex:[58,60,105,127,162,173,181,200,201,202,246,250],older:[4,5,6,7,8],omit:280,onc:[11,17,219,228,229],one:[8,9,11,14,280],onli:[0,3,7,11,12,13,62,219,229,280,281],onto:280,op1:280,open:[4,5,6,7,8,10,17,48,52,62,91,95,162,219,228,273,280,281,282],openssl:9,oper:[0,4,5,6,7,8,9,10,11,12,13,17,62,135,158,181,211,215,228,229,246,280],opn:280,opt:12,optim:12,optimist:10,option:[0,1,2,3,4,5,6,7,8,9,11,12,13,14,15,16,17,48,136,142,282],order:[6,7,8,11,12,14,105,106,162,163,181,182,205,280,282],org:12,org_blosc_cblosc:12,org_lz4:12,org_nghttp2:12,org_sourceware_bzip2:12,org_tukaani_xz:12,origin:[3,7,11,18,27,72,87,105,128,162,174,181,203,280],orthogon:280,other:[3,11,12,43,151,152,162,164,254,256,280],otherwis:[1,2,3,4,6,7,8,11,12,14,226,282],out:[11,272,280],output:[12,17,105,107,113,114,129,130,136,147,150,272,280,281],output_rank:[105,130],output_user_root:12,outputindexmap:[11,17,105,113,114,129,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150],outputindexmethod:[17,136,144,151,152,153,154,155,156,157],outsid:[219,280],over:[3,9,11,280],overlap:5,overrid:[0,1,2,3,4,5,6,7,8,12,13,14,15,16,282],overridden:[6,12],own:14,pack:8,pai:14,pair:16,paramet:[6,8,14,41,42,44,45,282],parent:[0,1,2,3,4,5,6,7,8,13,14,15,16,36,44,45,46,47,282],pars:[36,39,45],part:[12,246],partial:[4,6,7,8,11],particular:[0,10],pass:12,path:[4,5,6,7,8,9,10,12,13,14,219,281],pattern:62,pem:9,pend:0,pep:280,per:[7,11],perfect:280,perfectli:280,perform:[2,3,10,11,215,280,281],permiss:14,permit:[4,5,6,7,8,11,280],permut:11,persist:219,pick:7,pip:12,place:7,platform:[8,12],plu:280,point:[17,219,241,263,264,265,282],pointer:5,pool:0,posit:[3,11,280,281],posix:[12,13],possibl:[7,11,12],potenti:280,power:280,pre:12,prebuilt:12,preced:9,precis:[17,263,264,265,271,274,279,282],precomput:[7,10],predecessor:280,prefix:280,prepar:9,presenc:5,present:[3,11],preset:6,preshift_bit:[7,281],prevent:12,previou:280,previous:[4,5,6,7,8,13,14,16],primarili:42,print:[9,62],prior:[4,5,6,7,8,12,280],problem:14,process:[5,10,13],produc:[17,62,158,280],product:[72,90],progress:12,project:[12,14],project_id:14,promis:[17,62,158,159,160,161],properti:[3,6,7,10,15,219,282],propos:280,protocol:[13,280],provid:[5,6,7,8,9,10,12,13,14,62,219,229,280],purpos:[16,280],python3:12,python:[1,8,10,17,62,271,274,279,280],pythondimexpress:[246,249,250,251],qualiti:7,queri:10,queued_for_writeback_bytes_limit:0,quit:3,rais:[62,219,226],rang:[11,280],rank:[1,2,3,4,5,6,7,8,11,18,25,29,30,72,78,86,88,105,124,130,147,150,162,172,175,181,199,204,272,280,282],rare:280,rather:280,ratio:[6,8],raw:[6,7,219],reach:0,read:[2,3,4,5,6,7,8,10,11,17,18,31,32,181,194,205,211,215,219,229,239,240,243,273,280],read_chunk:[18,25,31],read_chunk_templ:[18,32],read_futur:281,readabl:[181,206],reader:[13,219],readi:227,readm:12,real:282,rebuild:12,receiv:[11,14],recent:[0,280],recheck:[4,5,6,7,8],recheck_cached_data:[4,5,6,7,8,281],recheck_cached_metadata:[4,6,7,8],recommend:[7,12,280],rectangular:[3,11],reduc:12,refer:[0,4,5,6,7,8,9,10,12,13,14,15,16,280,282],reflect:229,regardless:[4,5,6,7,8,280],region:[3,11,280,281],regist:[8,62],regular:[219,280],rel:[7,280],relat:[12,14,274,279],relationship:11,reli:282,relianc:13,remain:[6,8,11,228,280],remot:[0,9,10],remove_done_callback:[62,69,229,237],replac:280,repo:12,repositori:12,repres:[11,16,17,91,105,136,158,280,282],represent:[11,17,18,24,33,36,37,38,39,40,41,44,105,133,162,169,254,280,282],request:14,requestor:14,requir:[1,2,3,4,5,6,7,8,13,14,15,16,281,282],reserv:11,resiz:[6,7,8,11],resolut:[7,281],resolv:[181,207,280],resourc:[0,1,2,3,4,5,6,7,8,10,13,14,15,16,17,36,37,38,42,43,282],respect:[3,280],result:[10,11,12,17,62,70,72,77,158,181,188,189,190,191,219,226,227,229,238,280,281],retain:280,retri:14,retriev:[14,36,42,281],revalid:[4,5,6,7,8],revers:[105,106,162,163,181,182],rewrit:7,rfc:5,right:[11,14],rightarrow:11,roll:219,root:13,round:[3,11,280],rs1:13,rtf:12,rule:[11,12],run:14,runtim:[9,14],safe:[10,13,14],same:[0,5,6,8,11,12,16,43,219,229,280,281],satisfi:280,satur:10,save:9,scalar:[241,254,255,280],scale:7,scale_index:[7,281],scale_metadata:[7,281],schema:[6,7,8,10,11],script:12,sdist:12,sdk:14,se_curl:[9,12],second:[4,11],section:[9,10,14],secur:[9,14],segment:[7,281],sel:280,select:[7,17,246,247],self:[20,23,33,38,41,42,49,59,60,61,63,64,65,66,67,68,69,70,73,74,75,76,77,92,106,107,108,109,110,111,112,127,128,131,132,133,134,137,148,149,152,160,161,163,164,165,166,167,168,173,174,176,177,178,180,182,183,184,185,186,187,188,189,190,191,192,193,194,200,201,202,203,204,205,207,208,209,210,212,213,214,215,217,218,221,224,226,230,231,232,235,236,237,238,248,249,250,251,255,256,261],semant:[13,280],separ:[0,6,8,9,12,14,280,282],sequenc:[17,72,78,79,105,107,113,114,147,148,246,280],serial:11,serv:7,server:9,servic:14,set:[3,9,12,14,16,280],set_except:[158,160],set_result:[158,161],setup:[10,12],sever:[12,62],sha256:12,shape:[8,11,19,21,22,72,78,89,90,105,125,131,162,176,181,208,280],shard:[7,281],shard_bit:[7,281],shardingspec:7,share:[0,10,13,14,17,36,43],shlex:12,shortcut:280,should:[9,12],show:12,shuffl:[6,8],sign:[11,17,267,268,269,270,282],signal:158,silent:280,similar:[11,280],simpler:3,simplest:12,simpli:[90,229,280],simultan:12,sinc:[4,11,280,281],singl:[5,7,8,9,11,17,136,139,264,280,281,282],single_input_dimens:[11,151,157],singleton:[17,272],size:[0,6,7,8,11,12,48,51,54,72,90,91,94,97,98,104,105,132,162,177,181,209,281],skip:[12,280],slice:[105,110,162,166,181,185,280,281],slower:[6,8],slowest:[6,8],small:[1,7],smallest:[3,7,8],snappi:[6,8,12],soft:0,some:[11,219],sourc:[11,12,181,188,189,190,191,192,193,201,202,213,214,217,218,229],space:[12,17,18,30,72,88,105,124,130,246,272,280],spec:[10,36,39,40,41,43,44,45,47,135,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,210,252,273],special:[0,7,11,12,14,17,266,280],specif:[0,6,8,12,15,16,17,36,39,40,162,282],specifi:[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,72,162,170,175,181,194,243,246,272,280,282],split:12,squar:280,ssl:[9,12,14],sslkeylogfil:9,stack:12,stage:[17,219],standard:[8,12],start:[3,12,62,219,225,228,280],startup:12,stderr:9,step:[11,280],still:[5,7,11,219,228,280],stop:280,storag:[5,6,7,8,9,10,14,219,229],store:[5,6,8,9,11,15,17,219,243,281],str:[17,36,42,48,50,51,52,53,54,57,72,74,78,85,105,113,122,151,156,181,198,254,258,259,261,279,280],stride:[3,11,136,139,140,146,280],string:[0,3,4,5,6,7,8,10,11,13,14,15,17,48,57,274,279,282],strip_prefix:12,strong:10,structur:8,studio:12,sub:[5,12,281],subject:229,subscript:[280,281],subsequ:[229,280],subset:[11,12,62,280],subtyp:[4,6,8,15,282],succe:11,success:[224,226],successfulli:[227,229],suffic:11,suffici:280,suitabl:12,sum:280,suppli:281,support:[0,2,3,4,5,6,7,8,10,11,12,13,15,16,62,91,135,219,241,280,281,282],synchron:[62,219,226,281],syntax:[0,5,280],system:[9,12,14,15],tabl:[11,16],take:[7,9,10,280],taken:7,target:11,templat:[18,32,35],temporari:[7,12],tensoprstor:9,tensorflow:[8,241],tensorstor:[0,1,2,3,4,5,6,7,8,9,11,12,14,15,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282],tensorstore_bazel_build_opt:12,tensorstore_bazel_compilation_mod:12,tensorstore_bazel_startup_opt:12,tensorstore_bazelisk:12,tensorstore_ca_bundl:9,tensorstore_ca_path:9,tensorstore_curl_verbos:9,tensorstore_prebuilt_dir:12,tensorstore_system_lib:[9,12],term:280,termin:[274,279],test:[16,62],than:[0,4,5,6,7,8,11,12,280],thei:[16,41,274,279,280],therefor:7,thi:[0,1,3,4,5,6,7,8,9,11,12,13,14,36,42,43,46,47,62,90,106,128,131,132,163,174,176,177,181,182,203,204,208,209,215,219,229,254,255,280,281],those:62,thread:[0,62],three:11,through:[10,11,14,15],throughput:10,tie:3,time:[4,5,6,7,8,11],timedelta:8,timeout:[62,67,70,229,236,238],tmp:[12,219,281],to_json:[18,33,37,38,39,41,46,105,133,162,178,254,261],togeth:8,tool:12,top:[2,281],total:[0,72,90,105,132,162,177,181,209],total_bytes_limit:[0,4,6,7,8,38,42,44,46,47,281],toward:280,traceback:280,traffic:9,transact:[10,16,17,181,211,215,219,220,221,222,223,224,225,226,227,228,229,273],transform:[1,2,3,4,5,6,7,8,10,17,62,105,109,133,136,147,162,165,170,175,179,181,184,188,189,190,191,272,281,282],translat:[3,11,280],transpos:[105,106,162,163,181,182,280],treat:280,tree:12,trip:11,truncat:280,tupl:[18,19,22,27,28,72,80,81,82,83,84,85,87,89,105,107,117,118,119,120,121,122,123,125,128,131,158,159,162,174,176,181,203,208,280],turbo:12,tutori:10,two:[5,11,17,105,219,229,267,268,269,270,280,282],txn:219,type:[0,1,2,3,4,5,6,7,8,10,42,62,135,181,194,219,241,242,243,254,255,257,262,263,264,265,267,268,269,270,271,274,277,279,280,281,282],uint16:[6,7,17,219,275,282],uint32:[6,7,17,62,276,281,282],uint64:[6,7,17,277,281,282],uint8:[6,7,17,278,282],unbound:[11,17,48,50,91,93,266],unchang:280,uncommit:219,uncondition:280,under:[2,4,13,280],underli:[4,5,6,7,8,10,11,15,219,229],unequ:280,unicod:[17,279,282],uniform:[3,10],uniqu:[11,43],unit:6,unix:4,unknown:11,unlabel:[6,11,48,57],unless:[7,14,280],unlik:[62,280],unmatch:11,unshard:7,unsign:[17,275,276,277,278,282],unspecifi:[3,7,11,280],until:[219,228,229,280],updat:7,upon:280,upper:[11,48,56,72,80,82,83,91,99,102,105,118,119,120,280],url:[10,12],usag:219,use:[0,1,3,4,6,7,8,9,12,14,43,280],used:[0,1,3,4,6,7,8,9,10,11,12,13,14,17,18,26,158,181,211,215,219,224,228,246,271,272,274,279,280,281],useful:[1,16,42,280],uses:[7,9,11,12,13],usezlib:6,using:[0,5,7,9,10,11,12,14,62,219,229,280,281],ustr:[17,279,282],usual:280,utf:282,util:12,valid:[0,11,280],valu:[0,1,3,4,5,6,7,8,9,10,11,17,41,62,91,151,153,271,280,281,282],variabl:[12,14,17,274,279],varieti:15,varlength:6,vector:[11,105,107],verbos:[9,280],veri:7,verifi:14,version:[3,9,12,280],via:[1,3,10,280],view:[2,3,10,105,106,147,162,163,181,182,194,215,243,252,253,280,281],vindex:[58,61,105,134,162,180,181,212,213,214,246,251],virtual:[2,3,10,12,17,252,253],visibl:219,visual:12,volum:7,voxel:7,voxel_offset:[7,281],wai:[0,10,12],wait:[62,281],well:241,were:280,what:4,wheel:12,when:[0,1,4,5,6,7,8,11,12,227,229,280],where:[0,3,7,9,11,280,282],wherebi:280,whether:[41,219,222,223,225,228,280],which:[0,2,3,4,5,6,7,8,9,10,11,12,14,16,36,44,45,46,47,224,229,246,280,281],window:[9,12,13],wireshark:9,wise:[2,6,8],with_transact:[181,215,219],within:[0,3,4,5,6,7,8,11,14,280],without:[6,11,14,219,280,281],work:[12,14],workspac:12,worst:[6,7],writabl:[181,216],write:[2,4,5,6,7,8,10,11,14,17,18,34,35,181,194,211,215,217,218,219,229,239,240,243,273,280],write_chunk:[18,25,34],write_chunk_templ:[18,35],write_futur:281,writeback:[0,10],writefutur:[17,62,181,217,218,229,230,231,232,233,234,235,236,237,238],written:[12,281],xcode:12,xre:7,xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx:12,xyz:7,you:[4,6,7,8,9,12,14,43,281],your:12,yre:7,yyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyyi:12,zarr:[2,3,4,10,280],zarr_format:8,zarrai:8,zero:[4,6,7,8,11,48,91,98,280],zlib:[6,8,12],zre:7,zstd:[6,8,12]},titles:["Context framework","<code class=\"docutils literal notranslate\"><span class=\"pre\">array</span></code> Driver","<code class=\"docutils literal notranslate\"><span class=\"pre\">cast</span></code> Driver","<code class=\"docutils literal notranslate\"><span class=\"pre\">downsample</span></code> Driver","Drivers","<code class=\"docutils literal notranslate\"><span class=\"pre\">json</span></code> Driver","<code class=\"docutils literal notranslate\"><span class=\"pre\">n5</span></code> Driver","<code class=\"docutils literal notranslate\"><span class=\"pre\">neuroglancer_precomputed</span></code> Driver","<code class=\"docutils literal notranslate\"><span class=\"pre\">zarr</span></code> Driver","Environment variables","TensorStore","Index space","Building and Installing","<code class=\"docutils literal notranslate\"><span class=\"pre\">file</span></code> Key-Value Store driver","<code class=\"docutils literal notranslate\"><span class=\"pre\">gcs</span></code> Key-Value Store driver","Key-Value Storage Layer","<code class=\"docutils literal notranslate\"><span class=\"pre\">memory</span></code> Key-Value Store driver","API reference","tensorstore.ChunkLayout","tensorstore.ChunkLayout.Grid","tensorstore.ChunkLayout.Grid.__eq__","tensorstore.ChunkLayout.Grid.__init__","tensorstore.ChunkLayout.Grid.shape","tensorstore.ChunkLayout.__eq__","tensorstore.ChunkLayout.__init__(1)","tensorstore.ChunkLayout.__init__(2)","tensorstore.ChunkLayout.codec_chunk","tensorstore.ChunkLayout.grid_origin","tensorstore.ChunkLayout.inner_order","tensorstore.ChunkLayout.ndim","tensorstore.ChunkLayout.rank","tensorstore.ChunkLayout.read_chunk","tensorstore.ChunkLayout.read_chunk_template","tensorstore.ChunkLayout.to_json","tensorstore.ChunkLayout.write_chunk","tensorstore.ChunkLayout.write_chunk_template","tensorstore.Context","tensorstore.Context.Resource","tensorstore.Context.Resource.to_json","tensorstore.Context.Spec","tensorstore.Context.Spec.__init__","tensorstore.Context.Spec.to_json","tensorstore.Context.__getitem__","tensorstore.Context.__init__(default)","tensorstore.Context.__init__(json)","tensorstore.Context.__init__(spec)","tensorstore.Context.parent","tensorstore.Context.spec","tensorstore.Dim","tensorstore.Dim.__eq__","tensorstore.Dim.__init__(1)","tensorstore.Dim.__init__(2)","tensorstore.Dim.__init__(3)","tensorstore.Dim.__init__(4)","tensorstore.Dim.__init__(5)","tensorstore.Dim.implicit_lower","tensorstore.Dim.implicit_upper","tensorstore.Dim.label","tensorstore.DimExpression","tensorstore.DimExpression.__getitem__","tensorstore.DimExpression.oindex","tensorstore.DimExpression.vindex","tensorstore.Future","tensorstore.Future.add_done_callback","tensorstore.Future.cancel","tensorstore.Future.cancelled","tensorstore.Future.done","tensorstore.Future.exception","tensorstore.Future.force","tensorstore.Future.remove_done_callback","tensorstore.Future.result","tensorstore.Index","tensorstore.IndexDomain","tensorstore.IndexDomain.__eq__","tensorstore.IndexDomain.__getitem__(1)","tensorstore.IndexDomain.__getitem__(2)","tensorstore.IndexDomain.__getitem__(3)","tensorstore.IndexDomain.__getitem__(4)","tensorstore.IndexDomain.__init__(1)","tensorstore.IndexDomain.__init__(2)","tensorstore.IndexDomain.exclusive_max","tensorstore.IndexDomain.implicit_lower_bounds","tensorstore.IndexDomain.implicit_upper_bounds","tensorstore.IndexDomain.inclusive_max","tensorstore.IndexDomain.inclusive_min","tensorstore.IndexDomain.labels","tensorstore.IndexDomain.ndim","tensorstore.IndexDomain.origin","tensorstore.IndexDomain.rank","tensorstore.IndexDomain.shape","tensorstore.IndexDomain.size","tensorstore.IndexInterval","tensorstore.IndexInterval.__eq__","tensorstore.IndexInterval.__init__(1)","tensorstore.IndexInterval.__init__(2)","tensorstore.IndexInterval.__init__(3)","tensorstore.IndexInterval.__init__(4)","tensorstore.IndexInterval.__init__(5)","tensorstore.IndexInterval.empty","tensorstore.IndexInterval.exclusive_max","tensorstore.IndexInterval.exclusive_min","tensorstore.IndexInterval.finite","tensorstore.IndexInterval.inclusive_max","tensorstore.IndexInterval.inclusive_min","tensorstore.IndexInterval.size","tensorstore.IndexTransform","tensorstore.IndexTransform.T","tensorstore.IndexTransform.__call__","tensorstore.IndexTransform.__eq__","tensorstore.IndexTransform.__getitem__(1)","tensorstore.IndexTransform.__getitem__(2)","tensorstore.IndexTransform.__getitem__(3)","tensorstore.IndexTransform.__getitem__(4)","tensorstore.IndexTransform.__init__(1)","tensorstore.IndexTransform.__init__(2)","tensorstore.IndexTransform.__init__(3)","tensorstore.IndexTransform.domain","tensorstore.IndexTransform.implicit_lower_bounds","tensorstore.IndexTransform.implicit_upper_bounds","tensorstore.IndexTransform.input_exclusive_max","tensorstore.IndexTransform.input_inclusive_max","tensorstore.IndexTransform.input_inclusive_min","tensorstore.IndexTransform.input_labels","tensorstore.IndexTransform.input_origin","tensorstore.IndexTransform.input_rank","tensorstore.IndexTransform.input_shape","tensorstore.IndexTransform.ndim","tensorstore.IndexTransform.oindex","tensorstore.IndexTransform.origin","tensorstore.IndexTransform.output","tensorstore.IndexTransform.output_rank","tensorstore.IndexTransform.shape","tensorstore.IndexTransform.size","tensorstore.IndexTransform.to_json","tensorstore.IndexTransform.vindex","tensorstore.Indexable","tensorstore.OutputIndexMap","tensorstore.OutputIndexMap.__eq__","tensorstore.OutputIndexMap.__init__(1)","tensorstore.OutputIndexMap.__init__(2)","tensorstore.OutputIndexMap.__init__(3)","tensorstore.OutputIndexMap.index_array","tensorstore.OutputIndexMap.index_range","tensorstore.OutputIndexMap.input_dimension","tensorstore.OutputIndexMap.method","tensorstore.OutputIndexMap.offset","tensorstore.OutputIndexMap.stride","tensorstore.OutputIndexMaps","tensorstore.OutputIndexMaps.__eq__","tensorstore.OutputIndexMaps.__getitem__","tensorstore.OutputIndexMaps.rank","tensorstore.OutputIndexMethod","tensorstore.OutputIndexMethod.__eq__","tensorstore.OutputIndexMethod.__init__","tensorstore.OutputIndexMethod.array","tensorstore.OutputIndexMethod.constant","tensorstore.OutputIndexMethod.name","tensorstore.OutputIndexMethod.single_input_dimension","tensorstore.Promise","tensorstore.Promise.new","tensorstore.Promise.set_exception","tensorstore.Promise.set_result","tensorstore.Spec","tensorstore.Spec.T","tensorstore.Spec.__eq__","tensorstore.Spec.__getitem__(1)","tensorstore.Spec.__getitem__(2)","tensorstore.Spec.__getitem__(3)","tensorstore.Spec.__getitem__(4)","tensorstore.Spec.__init__","tensorstore.Spec.domain","tensorstore.Spec.dtype","tensorstore.Spec.ndim","tensorstore.Spec.oindex","tensorstore.Spec.origin","tensorstore.Spec.rank","tensorstore.Spec.shape","tensorstore.Spec.size","tensorstore.Spec.to_json","tensorstore.Spec.transform","tensorstore.Spec.vindex","tensorstore.TensorStore","tensorstore.TensorStore.T","tensorstore.TensorStore.__array__","tensorstore.TensorStore.__getitem__(1)","tensorstore.TensorStore.__getitem__(2)","tensorstore.TensorStore.__getitem__(3)","tensorstore.TensorStore.__getitem__(4)","tensorstore.TensorStore.__setitem__(1)","tensorstore.TensorStore.__setitem__(2)","tensorstore.TensorStore.__setitem__(3)","tensorstore.TensorStore.__setitem__(4)","tensorstore.TensorStore.__setitem__(5)","tensorstore.TensorStore.__setitem__(6)","tensorstore.TensorStore.astype","tensorstore.TensorStore.chunk_layout","tensorstore.TensorStore.domain","tensorstore.TensorStore.dtype","tensorstore.TensorStore.mode","tensorstore.TensorStore.ndim","tensorstore.TensorStore.oindex","tensorstore.TensorStore.oindex.__setitem__(1)","tensorstore.TensorStore.oindex.__setitem__(2)","tensorstore.TensorStore.origin","tensorstore.TensorStore.rank","tensorstore.TensorStore.read","tensorstore.TensorStore.readable","tensorstore.TensorStore.resolve","tensorstore.TensorStore.shape","tensorstore.TensorStore.size","tensorstore.TensorStore.spec","tensorstore.TensorStore.transaction","tensorstore.TensorStore.vindex","tensorstore.TensorStore.vindex.__setitem__(1)","tensorstore.TensorStore.vindex.__setitem__(2)","tensorstore.TensorStore.with_transaction","tensorstore.TensorStore.writable","tensorstore.TensorStore.write(1)","tensorstore.TensorStore.write(2)","tensorstore.Transaction","tensorstore.Transaction.__init__","tensorstore.Transaction.abort","tensorstore.Transaction.aborted","tensorstore.Transaction.atomic","tensorstore.Transaction.commit_async","tensorstore.Transaction.commit_started","tensorstore.Transaction.commit_sync","tensorstore.Transaction.future","tensorstore.Transaction.open","tensorstore.WriteFutures","tensorstore.WriteFutures.add_done_callback","tensorstore.WriteFutures.cancel","tensorstore.WriteFutures.cancelled","tensorstore.WriteFutures.commit","tensorstore.WriteFutures.copy","tensorstore.WriteFutures.done","tensorstore.WriteFutures.exception","tensorstore.WriteFutures.remove_done_callback","tensorstore.WriteFutures.result","tensorstore.array(1)","tensorstore.array(2)","tensorstore.bfloat16","tensorstore.bool","tensorstore.cast","tensorstore.complex128","tensorstore.complex64","tensorstore.d","tensorstore.d.__class_getitem__","tensorstore.d.__eq__","tensorstore.d.__getitem__","tensorstore.d.oindex","tensorstore.d.vindex","tensorstore.downsample(spec)","tensorstore.downsample(store)","tensorstore.dtype","tensorstore.dtype.__call__","tensorstore.dtype.__eq__","tensorstore.dtype.__init__(dtype)","tensorstore.dtype.__init__(name)","tensorstore.dtype.name","tensorstore.dtype.numpy_dtype","tensorstore.dtype.to_json","tensorstore.dtype.type","tensorstore.float16","tensorstore.float32","tensorstore.float64","tensorstore.inf","tensorstore.int16","tensorstore.int32","tensorstore.int64","tensorstore.int8","tensorstore.json","tensorstore.newaxis","tensorstore.open","tensorstore.string","tensorstore.uint16","tensorstore.uint32","tensorstore.uint64","tensorstore.uint8","tensorstore.ustring","Indexing","Tutorial","JSON Spec"],titleterms:{"boolean":280,"class":[17,18,36],"public":[17,18,19,48,58,62,72,91,105,136,147,151,158,162,181,229,246,254],Adding:280,TLS:[9,14],accessor:[36,37,39,219],align:11,api:[12,17],arrai:[1,280],asynchron:17,authent:14,broadcast:11,build:12,cast:2,certif:[9,14],checkout:12,chunk:4,cloud:9,codec:[6,8],compar:280,compress:6,compressor:8,concept:10,configur:9,construct:280,constructor:[18,19,36,39,48,72,91,105,136,151,162,219,246,254],context:0,core:17,credenti:9,data:17,dataset:281,debug:9,depend:12,develop:12,differ:280,dimens:280,document:12,domain:11,downsampl:3,driver:[1,2,3,4,5,6,7,8,13,14,15,16],ellipsi:280,environ:9,exampl:[0,1,2,3,4,5,6,7,8,11,38,42,43,44,46,47,48,266,272],express:280,file:[4,13],flyem:281,framework:0,from:12,gcs:14,get:10,googl:9,hemibrain:281,highlight:10,http:9,index:[11,17,280],instal:12,integ:280,interv:280,ipython:12,janelia:281,json:[5,7,282],kei:[13,14,15,16],layer:15,librari:12,limit:[6,7,8,13],local:[12,281],member:[17,18,19,48,58,62,72,91,105,136,147,151,158,162,181,229,246,254],memori:16,method:11,mode:280,neuroglancer_precomput:7,numpi:280,oindex:280,oper:219,outer:280,output:11,packag:12,parti:12,proxi:9,publish:12,pypi:12,python:12,read:281,refer:17,request:9,requir:12,run:12,select:280,shell:12,singl:4,singleton:280,space:11,spec:[17,282],special:[18,19,48,72,91,105,136,147,151,162,246,254],specif:7,start:10,storag:[4,15],store:[13,14,16],style:280,support:17,tensorstor:10,test:12,third:12,transform:[11,280],tutori:281,type:17,valu:[13,14,15,16],variabl:9,vector:280,view:17,vindex:280,without:12,write:281,zarr:8}})